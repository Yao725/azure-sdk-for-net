!CodeModel 
info: !Info 
  description: REST API for Azure Redis Cache Service.
  title: RedisManagementClient
schemas: !Schemas 
  booleans:
    - !BooleanSchema &ref_41
      type: boolean
      defaultValue: false
      language: !Languages 
        default:
          name: Boolean
          description: Specifies whether the non-ssl Redis server port (6379) is enabled.
      protocol: !Protocols {}
    - !BooleanSchema &ref_70
      type: boolean
      language: !Languages 
        default:
          name: Boolean
          description: Specifies whether the instance is a primary node.
      protocol: !Protocols {}
  numbers:
    - !NumberSchema &ref_159
      type: number
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 64
      language: !Languages 
        default:
          name: Number
          description: ''
      protocol: !Protocols {}
    - !NumberSchema &ref_50
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: SkuCapacity
          description: 'The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).'
      protocol: !Protocols {}
    - !NumberSchema &ref_42
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisCommonPropertiesReplicasPerMaster
          description: The number of replicas to be created per primary.
      protocol: !Protocols {}
    - !NumberSchema &ref_43
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisCommonPropertiesReplicasPerPrimary
          description: The number of replicas to be created per primary.
      protocol: !Protocols {}
    - !NumberSchema &ref_45
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisCommonPropertiesShardCount
          description: The number of shards to be created on a Premium Cluster Cache.
      protocol: !Protocols {}
    - !NumberSchema &ref_61
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisPropertiesPort
          description: Redis non-SSL port.
      protocol: !Protocols {}
    - !NumberSchema &ref_62
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisPropertiesSslPort
          description: Redis SSL port.
      protocol: !Protocols {}
    - !NumberSchema &ref_66
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisInstanceDetailsSslPort
          description: Redis instance SSL port.
      protocol: !Protocols {}
    - !NumberSchema &ref_67
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisInstanceDetailsNonSslPort
          description: If enableNonSslPort is true, provides Redis instance Non-SSL port.
      protocol: !Protocols {}
    - !NumberSchema &ref_69
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisInstanceDetailsShardId
          description: If clustering is enabled, the Shard ID of Redis Instance
      protocol: !Protocols {}
    - !NumberSchema &ref_117
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: RedisRebootParametersShardId
          description: If clustering is enabled, the ID of the shard to be rebooted.
      protocol: !Protocols {}
    - !NumberSchema &ref_118
      type: integer
      precision: 32
      language: !Languages 
        default:
          name: ArrayItemschema
          description: ''
      protocol: !Protocols {}
    - !NumberSchema &ref_89
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      precision: 32
      language: !Languages 
        default:
          name: ScheduleEntryStartHourUtc
          description: Start hour after which cache patching can start.
      protocol: !Protocols {}
  strings:
    - !StringSchema &ref_0
      type: string
      language: !Languages 
        default:
          name: String
          description: simple string
      protocol: !Protocols {}
    - !StringSchema &ref_3
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: OperationName
          description: 'Operation name: {provider}/{resource}/{operation}'
      protocol: !Protocols {}
    - !StringSchema &ref_4
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: OperationDisplayProvider
          description: Friendly name of the resource provider
      protocol: !Protocols {}
    - !StringSchema &ref_5
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: OperationDisplayOperation
          description: 'Operation type: read, write, delete, listKeys/action, etc.'
      protocol: !Protocols {}
    - !StringSchema &ref_6
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: OperationDisplayResource
          description: Resource type on which the operation is performed.
      protocol: !Protocols {}
    - !StringSchema &ref_7
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: OperationDisplayDescription
          description: Friendly name of the operation
      protocol: !Protocols {}
    - !StringSchema &ref_8
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: OperationListResultNextLink
          description: URL to get the next set of operation list results if there are any.
      protocol: !Protocols {}
    - !StringSchema &ref_11
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
      language: !Languages 
        default:
          name: ErrorDetailCode
          description: The error code.
      protocol: !Protocols {}
    - !StringSchema &ref_12
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
      language: !Languages 
        default:
          name: ErrorDetailMessage
          description: The error message.
      protocol: !Protocols {}
    - !StringSchema &ref_13
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
      language: !Languages 
        default:
          name: ErrorDetailTarget
          description: The error target.
      protocol: !Protocols {}
    - !StringSchema &ref_15
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
      language: !Languages 
        default:
          name: ErrorAdditionalInfoType
          description: The additional info type.
      protocol: !Protocols {}
    - !StringSchema &ref_1
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_18
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: CheckNameAvailabilityParametersName
          description: Resource name.
      protocol: !Protocols {}
    - !StringSchema &ref_19
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: CheckNameAvailabilityParametersType
          description: Resource type. The only legal value of this property for checking redis cache name availability is 'Microsoft.Cache/redis'.
      protocol: !Protocols {}
    - !StringSchema &ref_20
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: UpgradeNotificationName
          description: Name of upgrade notification.
      protocol: !Protocols {}
    - !StringSchema &ref_23
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: NotificationListResponseNextLink
          description: Link for next set of notifications.
      protocol: !Protocols {}
    - !StringSchema &ref_51
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      pattern: ^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$
      language: !Languages 
        default:
          name: RedisCreatePropertiesSubnetId
          description: >-
            The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format:
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
      protocol: !Protocols {}
    - !StringSchema &ref_52
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      pattern: ^\d+\.\d+\.\d+\.\d+$
      extensions:
        x-ms-mutability:
          - read
          - create
      language: !Languages 
        default:
          name: RedisCreatePropertiesStaticIP
          description: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.
      protocol: !Protocols {}
    - !StringSchema &ref_29
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationRdbBackupEnabled
          description: Specifies whether the rdb backup is enabled
      protocol: !Protocols {}
    - !StringSchema &ref_30
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationRdbBackupFrequency
          description: Specifies the frequency for creating rdb backup
      protocol: !Protocols {}
    - !StringSchema &ref_31
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationRdbBackupMaxSnapshotCount
          description: Specifies the maximum number of snapshots for rdb backup
      protocol: !Protocols {}
    - !StringSchema &ref_32
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationRdbStorageConnectionString
          description: The storage account connection string for storing rdb file
      protocol: !Protocols {}
    - !StringSchema &ref_33
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationAofStorageConnectionString0
          description: First storage account connection string
      protocol: !Protocols {}
    - !StringSchema &ref_34
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationAofStorageConnectionString1
          description: Second storage account connection string
      protocol: !Protocols {}
    - !StringSchema &ref_35
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationMaxfragmentationmemoryReserved
          description: Value in megabytes reserved for fragmentation per shard
      protocol: !Protocols {}
    - !StringSchema &ref_36
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationMaxmemoryPolicy
          description: The eviction strategy used when your data won't fit within its memory limit.
      protocol: !Protocols {}
    - !StringSchema &ref_37
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationMaxmemoryReserved
          description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
      protocol: !Protocols {}
    - !StringSchema &ref_38
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationMaxmemoryDelta
          description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
      protocol: !Protocols {}
    - !StringSchema &ref_39
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfigurationMaxclients
          description: The max clients config
      protocol: !Protocols {}
    - !StringSchema &ref_40
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisVersion
          description: 'Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)'
      protocol: !Protocols {}
    - !StringSchema &ref_25
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisCreateParametersZonesItem
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_26
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      extensions:
        x-ms-mutability:
          - read
          - create
      language: !Languages 
        default:
          name: RedisCreateParametersLocation
          description: The geo-location where the resource lives
      protocol: !Protocols {}
    - !StringSchema &ref_60
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisPropertiesHostName
          description: Redis host name.
      protocol: !Protocols {}
    - !StringSchema &ref_63
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisAccessKeysPrimaryKey
          description: The current primary key that clients can use to authenticate with Redis cache.
      protocol: !Protocols {}
    - !StringSchema &ref_64
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisAccessKeysSecondaryKey
          description: The current secondary key that clients can use to authenticate with Redis cache.
      protocol: !Protocols {}
    - !StringSchema &ref_65
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisLinkedServerId
          description: Linked server Id.
      protocol: !Protocols {}
    - !StringSchema &ref_68
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisInstanceDetailsZone
          description: If the Cache uses availability zones, specifies availability zone where this instance is located.
      protocol: !Protocols {}
    - !StringSchema &ref_104
      type: string
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: PrivateEndpointId
          description: The ARM identifier for Private Endpoint
      protocol: !Protocols {}
    - !StringSchema &ref_106
      type: string
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: PrivateLinkServiceConnectionStateDescription
          description: The reason for approval/rejection of the connection.
      protocol: !Protocols {}
    - !StringSchema &ref_107
      type: string
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: PrivateLinkServiceConnectionStateActionsRequired
          description: A message indicating if changes on the service provider require any updates on the consumer.
      protocol: !Protocols {}
    - !StringSchema &ref_101
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: ResourceId
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
      protocol: !Protocols {}
    - !StringSchema &ref_102
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: ResourceName
          description: The name of the resource
      protocol: !Protocols {}
    - !StringSchema &ref_103
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: ResourceType
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      protocol: !Protocols {}
    - !StringSchema &ref_74
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisResourceZonesItem
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_2
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_82
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
      extensions:
        x-ms-mutability:
          - read
          - create
      language: !Languages 
        default:
          name: TrackedResourceLocation
          description: The geo-location where the resource lives
      protocol: !Protocols {}
    - !StringSchema &ref_114
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisListResultNextLink
          description: Link for next page of results.
      protocol: !Protocols {}
    - !StringSchema &ref_119
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisForceRebootResponseMessage
          description: Status message
      protocol: !Protocols {}
    - !StringSchema &ref_120
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: ImportRDBParametersFormat
          description: File format.
      protocol: !Protocols {}
    - !StringSchema &ref_121
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: ImportRDBParametersFilesItem
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_122
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: ExportRDBParametersFormat
          description: File format.
      protocol: !Protocols {}
    - !StringSchema &ref_123
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: ExportRDBParametersPrefix
          description: Prefix to use for exported files.
      protocol: !Protocols {}
    - !StringSchema &ref_124
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: ExportRDBParametersContainer
          description: Container name to export to.
      protocol: !Protocols {}
    - !StringSchema &ref_86
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisFirewallRulePropertiesStartIP
          description: lowest IP address included in the range
      protocol: !Protocols {}
    - !StringSchema &ref_87
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisFirewallRulePropertiesEndIP
          description: highest IP address included in the range
      protocol: !Protocols {}
    - !StringSchema &ref_125
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisFirewallRuleListResultNextLink
          description: Link for next page of results.
      protocol: !Protocols {}
    - !StringSchema &ref_126
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisPatchScheduleListResultNextLink
          description: Link for next page of results.
      protocol: !Protocols {}
    - !StringSchema &ref_91
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisLinkedServerCreatePropertiesLinkedRedisCacheId
          description: Fully qualified resourceId of the linked redis cache.
      protocol: !Protocols {}
    - !StringSchema &ref_92
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      extensions:
        x-ms-mutability:
          - create
          - read
      language: !Languages 
        default:
          name: RedisLinkedServerCreatePropertiesLinkedRedisCacheLocation
          description: Location of the linked redis cache.
      protocol: !Protocols {}
    - !StringSchema &ref_94
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisLinkedServerPropertiesProvisioningState
          description: Terminal state of the link between primary and secondary redis cache.
      protocol: !Protocols {}
    - !StringSchema &ref_131
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: RedisLinkedServerWithPropertiesListNextLink
          description: Link for next set.
      protocol: !Protocols {}
    - !StringSchema &ref_241
      type: string
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_97
      type: string
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: PrivateLinkResourcePropertiesGroupId
          description: The private link resource group id.
      protocol: !Protocols {}
    - !StringSchema &ref_98
      type: string
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: PrivateLinkResourcePropertiesRequiredMembersItem
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_99
      type: string
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      language: !Languages 
        default:
          name: PrivateLinkResourcePropertiesRequiredZoneNamesItem
          description: ''
      protocol: !Protocols {}
    - !StringSchema 
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2.0'
      minLength: 1
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
  choices:
    - !ChoiceSchema &ref_48
      choices:
        - !ChoiceValue 
          value: Basic
          language:
            default:
              name: Basic
              description: ''
        - !ChoiceValue 
          value: Standard
          language:
            default:
              name: Standard
              description: ''
        - !ChoiceValue 
          value: Premium
          language:
            default:
              name: Premium
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: SkuName
          description: 'The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)'
      protocol: !Protocols {}
    - !ChoiceSchema &ref_49
      choices:
        - !ChoiceValue 
          value: C
          language:
            default:
              name: C
              description: ''
        - !ChoiceValue 
          value: P
          language:
            default:
              name: P
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: SkuFamily
          description: 'The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).'
      protocol: !Protocols {}
    - !ChoiceSchema &ref_46
      choices:
        - !ChoiceValue 
          value: '1.0'
          language:
            default:
              name: One0
              description: ''
        - !ChoiceValue 
          value: '1.1'
          language:
            default:
              name: One1
              description: ''
        - !ChoiceValue 
          value: '1.2'
          language:
            default:
              name: One2
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: TlsVersion
          description: 'Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2'')'
      protocol: !Protocols {}
    - !ChoiceSchema &ref_47
      choices:
        - !ChoiceValue 
          value: Enabled
          language:
            default:
              name: Enabled
              description: ''
        - !ChoiceValue 
          value: Disabled
          language:
            default:
              name: Disabled
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      defaultValue: Enabled
      language: !Languages 
        default:
          name: PublicNetworkAccess
          description: Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
      protocol: !Protocols {}
    - !ChoiceSchema &ref_59
      choices:
        - !ChoiceValue 
          value: Creating
          language:
            default:
              name: Creating
              description: ''
        - !ChoiceValue 
          value: Deleting
          language:
            default:
              name: Deleting
              description: ''
        - !ChoiceValue 
          value: Disabled
          language:
            default:
              name: Disabled
              description: ''
        - !ChoiceValue 
          value: Failed
          language:
            default:
              name: Failed
              description: ''
        - !ChoiceValue 
          value: Linking
          language:
            default:
              name: Linking
              description: ''
        - !ChoiceValue 
          value: Provisioning
          language:
            default:
              name: Provisioning
              description: ''
        - !ChoiceValue 
          value: RecoveringScaleFailure
          language:
            default:
              name: RecoveringScaleFailure
              description: ''
        - !ChoiceValue 
          value: Scaling
          language:
            default:
              name: Scaling
              description: ''
        - !ChoiceValue 
          value: Succeeded
          language:
            default:
              name: Succeeded
              description: ''
        - !ChoiceValue 
          value: Unlinking
          language:
            default:
              name: Unlinking
              description: ''
        - !ChoiceValue 
          value: Unprovisioning
          language:
            default:
              name: Unprovisioning
              description: ''
        - !ChoiceValue 
          value: Updating
          language:
            default:
              name: Updating
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: ProvisioningState
          description: Redis instance provisioning status.
      protocol: !Protocols {}
    - !ChoiceSchema &ref_105
      choices:
        - !ChoiceValue 
          value: Pending
          language:
            default:
              name: Pending
              description: ''
        - !ChoiceValue 
          value: Approved
          language:
            default:
              name: Approved
              description: ''
        - !ChoiceValue 
          value: Rejected
          language:
            default:
              name: Rejected
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: PrivateEndpointServiceConnectionStatus
          description: The private endpoint connection status.
      protocol: !Protocols {}
    - !ChoiceSchema &ref_108
      choices:
        - !ChoiceValue 
          value: Succeeded
          language:
            default:
              name: Succeeded
              description: ''
        - !ChoiceValue 
          value: Creating
          language:
            default:
              name: Creating
              description: ''
        - !ChoiceValue 
          value: Deleting
          language:
            default:
              name: Deleting
              description: ''
        - !ChoiceValue 
          value: Failed
          language:
            default:
              name: Failed
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: PrivateEndpointConnectionProvisioningState
          description: The current provisioning state.
      protocol: !Protocols {}
    - !ChoiceSchema &ref_116
      choices:
        - !ChoiceValue 
          value: PrimaryNode
          language:
            default:
              name: PrimaryNode
              description: ''
        - !ChoiceValue 
          value: SecondaryNode
          language:
            default:
              name: SecondaryNode
              description: ''
        - !ChoiceValue 
          value: AllNodes
          language:
            default:
              name: AllNodes
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: RebootType
          description: Which Redis node(s) to reboot. Depending on this value data loss is possible.
      protocol: !Protocols {}
    - !ChoiceSchema &ref_213
      choices:
        - !ChoiceValue 
          value: default
          language:
            default:
              name: Default
              description: ''
      type: choice
      choiceType: *ref_0
      language: !Languages 
        default:
          name: DefaultName
          description: ''
      protocol: !Protocols {}
  sealedChoices:
    - !SealedChoiceSchema &ref_115
      choices:
        - !ChoiceValue 
          value: Primary
          language:
            default:
              name: Primary
              description: ''
        - !ChoiceValue 
          value: Secondary
          language:
            default:
              name: Secondary
              description: ''
      type: sealed-choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: RedisKeyType
          description: The Redis access key to regenerate.
      protocol: !Protocols {}
    - !SealedChoiceSchema &ref_88
      choices:
        - !ChoiceValue 
          value: Monday
          language:
            default:
              name: Monday
              description: ''
        - !ChoiceValue 
          value: Tuesday
          language:
            default:
              name: Tuesday
              description: ''
        - !ChoiceValue 
          value: Wednesday
          language:
            default:
              name: Wednesday
              description: ''
        - !ChoiceValue 
          value: Thursday
          language:
            default:
              name: Thursday
              description: ''
        - !ChoiceValue 
          value: Friday
          language:
            default:
              name: Friday
              description: ''
        - !ChoiceValue 
          value: Saturday
          language:
            default:
              name: Saturday
              description: ''
        - !ChoiceValue 
          value: Sunday
          language:
            default:
              name: Sunday
              description: ''
        - !ChoiceValue 
          value: Everyday
          language:
            default:
              name: Everyday
              description: ''
        - !ChoiceValue 
          value: Weekend
          language:
            default:
              name: Weekend
              description: ''
      type: sealed-choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: DayOfWeek
          description: Day of the week when a cache can be patched.
      protocol: !Protocols {}
    - !SealedChoiceSchema &ref_93
      choices:
        - !ChoiceValue 
          value: Primary
          language:
            default:
              name: Primary
              description: ''
        - !ChoiceValue 
          value: Secondary
          language:
            default:
              name: Secondary
              description: ''
      type: sealed-choice
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: ReplicationRole
          description: Role of the linked server.
      protocol: !Protocols {}
  constants:
    - !ConstantSchema &ref_149
      type: constant
      value: !ConstantValue 
        value: '2020-12-01'
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApiVersion20201201
          description: Api Version (2020-12-01)
      protocol: !Protocols {}
    - !ConstantSchema &ref_152
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_156
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !Protocols {}
  dictionaries:
    - !DictionarySchema &ref_22
      type: dictionary
      elementType: *ref_1
      language: !Languages 
        default:
          name: UpgradeNotificationUpsellNotification
          description: Details about this upgrade notification
      protocol: !Protocols {}
    - !DictionarySchema &ref_28
      type: dictionary
      elementType: *ref_1
      language: !Languages 
        default:
          name: RedisCommonPropertiesRedisConfiguration
          description: >-
            All Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
      protocol: !Protocols {}
    - !DictionarySchema &ref_44
      type: dictionary
      elementType: *ref_1
      language: !Languages 
        default:
          name: RedisCommonPropertiesTenantSettings
          description: A dictionary of tenant settings
      protocol: !Protocols {}
    - !DictionarySchema &ref_27
      type: dictionary
      elementType: *ref_1
      language: !Languages 
        default:
          name: RedisCreateParametersTags
          description: Resource tags.
      protocol: !Protocols {}
    - !DictionarySchema &ref_81
      type: dictionary
      elementType: *ref_2
      language: !Languages 
        default:
          name: TrackedResourceTags
          description: Resource tags.
      protocol: !Protocols {}
    - !DictionarySchema &ref_113
      type: dictionary
      elementType: *ref_1
      language: !Languages 
        default:
          name: RedisUpdateParametersTags
          description: Resource tags.
      protocol: !Protocols {}
  anyObjects:
    - !AnyObjectSchema &ref_16
      type: any-object
      language: !Languages 
        default:
          name: AnyObject
          description: Any object
      protocol: !Protocols {}
  dateTimes:
    - !DateTimeSchema &ref_21
      type: date-time
      format: date-time
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: UpgradeNotificationTimestamp
          description: Timestamp when upgrade notification occurred.
      protocol: !Protocols {}
  durations:
    - !DurationSchema &ref_90
      type: duration
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      language: !Languages 
        default:
          name: ScheduleEntryMaintenanceWindow
          description: 'ISO8601 timespan specifying how much time cache patching can take. '
      protocol: !Protocols {}
  objects:
    - !ObjectSchema &ref_153
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_132
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            elementType: !ObjectSchema &ref_9
              type: object
              apiVersions:
                - !ApiVersion 
                  version: '2020-12-01'
              properties:
                - !Property 
                  schema: *ref_3
                  serializedName: name
                  language: !Languages 
                    default:
                      name: name
                      description: 'Operation name: {provider}/{resource}/{operation}'
                  protocol: !Protocols {}
                - !Property 
                  schema: !ObjectSchema &ref_10
                    type: object
                    apiVersions:
                      - !ApiVersion 
                        version: '2020-12-01'
                    properties:
                      - !Property 
                        schema: *ref_4
                        serializedName: provider
                        language: !Languages 
                          default:
                            name: provider
                            description: Friendly name of the resource provider
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_5
                        serializedName: operation
                        language: !Languages 
                          default:
                            name: operation
                            description: 'Operation type: read, write, delete, listKeys/action, etc.'
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_6
                        serializedName: resource
                        language: !Languages 
                          default:
                            name: resource
                            description: Resource type on which the operation is performed.
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_7
                        serializedName: description
                        language: !Languages 
                          default:
                            name: description
                            description: Friendly name of the operation
                        protocol: !Protocols {}
                    serializationFormats:
                      - json
                    usage:
                      - output
                    extensions:
                      x-internal-autorest-anonymous-schema:
                        anonymous: true
                    language: !Languages 
                      default:
                        name: OperationDisplay
                        description: The object that describes the operation.
                        namespace: ''
                    protocol: !Protocols {}
                  serializedName: display
                  language: !Languages 
                    default:
                      name: display
                      description: The object that describes the operation.
                  protocol: !Protocols {}
              serializationFormats:
                - json
              usage:
                - output
              language: !Languages 
                default:
                  name: Operation
                  description: REST API operation
                  namespace: ''
              protocol: !Protocols {}
            language: !Languages 
              default:
                name: OperationListResultValue
                description: List of operations supported by the resource provider.
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: List of operations supported by the resource provider.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_8
          readOnly: true
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: URL to get the next set of operation list results if there are any.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: OperationListResult
          description: Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.
          namespace: ''
      protocol: !Protocols {}
    - *ref_9
    - *ref_10
    - !ObjectSchema &ref_154
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2.0'
      properties:
        - !Property 
          schema: !ObjectSchema &ref_14
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2.0'
            properties:
              - !Property 
                schema: *ref_11
                readOnly: true
                serializedName: code
                language: !Languages 
                  default:
                    name: code
                    description: The error code.
                protocol: !Protocols {}
              - !Property 
                schema: *ref_12
                readOnly: true
                serializedName: message
                language: !Languages 
                  default:
                    name: message
                    description: The error message.
                protocol: !Protocols {}
              - !Property 
                schema: *ref_13
                readOnly: true
                serializedName: target
                language: !Languages 
                  default:
                    name: target
                    description: The error target.
                protocol: !Protocols {}
              - !Property 
                schema: !ArraySchema &ref_133
                  type: array
                  apiVersions:
                    - !ApiVersion 
                      version: '2.0'
                  elementType: *ref_14
                  language: !Languages 
                    default:
                      name: ErrorDetailDetails
                      description: The error details.
                  protocol: !Protocols {}
                readOnly: true
                serializedName: details
                language: !Languages 
                  default:
                    name: details
                    description: The error details.
                protocol: !Protocols {}
              - !Property 
                schema: !ArraySchema &ref_134
                  type: array
                  apiVersions:
                    - !ApiVersion 
                      version: '2.0'
                  elementType: !ObjectSchema &ref_17
                    type: object
                    apiVersions:
                      - !ApiVersion 
                        version: '2.0'
                    properties:
                      - !Property 
                        schema: *ref_15
                        readOnly: true
                        serializedName: type
                        language: !Languages 
                          default:
                            name: type
                            description: The additional info type.
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_16
                        readOnly: true
                        serializedName: info
                        language: !Languages 
                          default:
                            name: info
                            description: The additional info.
                        protocol: !Protocols {}
                    serializationFormats:
                      - json
                    usage:
                      - exception
                    language: !Languages 
                      default:
                        name: ErrorAdditionalInfo
                        description: The resource management error additional info.
                        namespace: ''
                    protocol: !Protocols {}
                  language: !Languages 
                    default:
                      name: ErrorDetailAdditionalInfo
                      description: The error additional info.
                  protocol: !Protocols {}
                readOnly: true
                serializedName: additionalInfo
                language: !Languages 
                  default:
                    name: additionalInfo
                    description: The error additional info.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - exception
            language: !Languages 
              default:
                name: ErrorDetail
                description: The error detail.
                namespace: ''
            protocol: !Protocols {}
          serializedName: error
          language: !Languages 
            default:
              name: error
              description: The error object.
          protocol: !Protocols {}
      serializationFormats:
        - json
      summary: Error response
      usage:
        - exception
      language: !Languages 
        default:
          name: ErrorResponse
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          namespace: ''
          summary: Error response
      protocol: !Protocols {}
    - *ref_14
    - *ref_17
    - !ObjectSchema &ref_157
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: *ref_18
          required: true
          serializedName: name
          language: !Languages 
            default:
              name: name
              description: Resource name.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_19
          required: true
          serializedName: type
          language: !Languages 
            default:
              name: type
              description: Resource type. The only legal value of this property for checking redis cache name availability is 'Microsoft.Cache/redis'.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: CheckNameAvailabilityParameters
          description: Parameters body to pass for resource name availability check.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_163
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_135
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            elementType: !ObjectSchema &ref_24
              type: object
              apiVersions:
                - !ApiVersion 
                  version: '2020-12-01'
              properties:
                - !Property 
                  schema: *ref_20
                  readOnly: true
                  serializedName: name
                  language: !Languages 
                    default:
                      name: name
                      description: Name of upgrade notification.
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_21
                  readOnly: true
                  serializedName: timestamp
                  language: !Languages 
                    default:
                      name: timestamp
                      description: Timestamp when upgrade notification occurred.
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_22
                  readOnly: true
                  serializedName: upsellNotification
                  language: !Languages 
                    default:
                      name: upsellNotification
                      description: Details about this upgrade notification
                  protocol: !Protocols {}
              serializationFormats:
                - json
              usage:
                - output
              language: !Languages 
                default:
                  name: UpgradeNotification
                  description: Properties of upgrade notification.
                  namespace: ''
              protocol: !Protocols {}
            language: !Languages 
              default:
                name: NotificationListResponseValue
                description: List of all notifications.
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: List of all notifications.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_23
          readOnly: true
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: Link for next set of notifications.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: NotificationListResponse
          description: The response of listUpgradeNotifications.
          namespace: ''
      protocol: !Protocols {}
    - *ref_24
    - !ObjectSchema &ref_164
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_136
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            elementType: *ref_25
            language: !Languages 
              default:
                name: RedisCreateParametersZones
                description: A list of availability zones denoting where the resource needs to come from.
            protocol: !Protocols {}
          required: false
          serializedName: zones
          language: !Languages 
            default:
              name: zones
              description: A list of availability zones denoting where the resource needs to come from.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_26
          required: true
          serializedName: location
          extensions:
            x-ms-mutability:
              - read
              - create
          language: !Languages 
            default:
              name: location
              description: The geo-location where the resource lives
          protocol: !Protocols {}
        - !Property 
          schema: *ref_27
          required: false
          serializedName: tags
          language: !Languages 
            default:
              name: tags
              description: Resource tags.
          protocol: !Protocols {}
        - !Property 
          schema: !ObjectSchema &ref_58
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            parents: !Relations 
              all:
                - *ref_28
              immediate:
                - *ref_28
            properties:
              - !Property 
                schema: *ref_29
                serializedName: rdb-backup-enabled
                language: !Languages 
                  default:
                    name: rdbBackupEnabled
                    description: Specifies whether the rdb backup is enabled
                protocol: !Protocols {}
              - !Property 
                schema: *ref_30
                serializedName: rdb-backup-frequency
                language: !Languages 
                  default:
                    name: rdbBackupFrequency
                    description: Specifies the frequency for creating rdb backup
                protocol: !Protocols {}
              - !Property 
                schema: *ref_31
                serializedName: rdb-backup-max-snapshot-count
                language: !Languages 
                  default:
                    name: rdbBackupMaxSnapshotCount
                    description: Specifies the maximum number of snapshots for rdb backup
                protocol: !Protocols {}
              - !Property 
                schema: *ref_32
                serializedName: rdb-storage-connection-string
                language: !Languages 
                  default:
                    name: rdbStorageConnectionString
                    description: The storage account connection string for storing rdb file
                protocol: !Protocols {}
              - !Property 
                schema: *ref_33
                serializedName: aof-storage-connection-string-0
                language: !Languages 
                  default:
                    name: aofStorageConnectionString0
                    description: First storage account connection string
                protocol: !Protocols {}
              - !Property 
                schema: *ref_34
                serializedName: aof-storage-connection-string-1
                language: !Languages 
                  default:
                    name: aofStorageConnectionString1
                    description: Second storage account connection string
                protocol: !Protocols {}
              - !Property 
                schema: *ref_35
                serializedName: maxfragmentationmemory-reserved
                language: !Languages 
                  default:
                    name: maxfragmentationmemoryReserved
                    description: Value in megabytes reserved for fragmentation per shard
                protocol: !Protocols {}
              - !Property 
                schema: *ref_36
                serializedName: maxmemory-policy
                language: !Languages 
                  default:
                    name: maxmemoryPolicy
                    description: The eviction strategy used when your data won't fit within its memory limit.
                protocol: !Protocols {}
              - !Property 
                schema: *ref_37
                serializedName: maxmemory-reserved
                language: !Languages 
                  default:
                    name: maxmemoryReserved
                    description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
                protocol: !Protocols {}
              - !Property 
                schema: *ref_38
                serializedName: maxmemory-delta
                language: !Languages 
                  default:
                    name: maxmemoryDelta
                    description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
                protocol: !Protocols {}
              - !Property 
                schema: *ref_39
                readOnly: true
                serializedName: maxclients
                language: !Languages 
                  default:
                    name: maxclients
                    description: The max clients config
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            extensions:
              x-internal-autorest-anonymous-schema:
                anonymous: true
            language: !Languages 
              default:
                name: RedisCommonPropertiesRedisConfiguration
                description: >-
                  All Redis Settings. Few possible keys:
                  rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
                  etc.
                namespace: ''
            protocol: !Protocols {}
          flattenedNames:
            - properties
            - redisConfiguration
          serializedName: redisConfiguration
          language: !Languages 
            default:
              name: redisConfiguration
              description: >-
                All Redis Settings. Few possible keys:
                rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
                etc.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_40
          flattenedNames:
            - properties
            - redisVersion
          serializedName: redisVersion
          language: !Languages 
            default:
              name: redisVersion
              description: 'Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)'
          protocol: !Protocols {}
        - !Property 
          schema: *ref_41
          flattenedNames:
            - properties
            - enableNonSslPort
          serializedName: enableNonSslPort
          language: !Languages 
            default:
              name: enableNonSslPort
              description: Specifies whether the non-ssl Redis server port (6379) is enabled.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_42
          flattenedNames:
            - properties
            - replicasPerMaster
          serializedName: replicasPerMaster
          language: !Languages 
            default:
              name: replicasPerMaster
              description: The number of replicas to be created per primary.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_43
          flattenedNames:
            - properties
            - replicasPerPrimary
          serializedName: replicasPerPrimary
          language: !Languages 
            default:
              name: replicasPerPrimary
              description: The number of replicas to be created per primary.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_44
          flattenedNames:
            - properties
            - tenantSettings
          serializedName: tenantSettings
          language: !Languages 
            default:
              name: tenantSettings
              description: A dictionary of tenant settings
          protocol: !Protocols {}
        - !Property 
          schema: *ref_45
          flattenedNames:
            - properties
            - shardCount
          serializedName: shardCount
          language: !Languages 
            default:
              name: shardCount
              description: The number of shards to be created on a Premium Cluster Cache.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_46
          flattenedNames:
            - properties
            - minimumTlsVersion
          serializedName: minimumTlsVersion
          language: !Languages 
            default:
              name: minimumTlsVersion
              description: 'Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2'')'
          protocol: !Protocols {}
        - !Property 
          schema: *ref_47
          flattenedNames:
            - properties
            - publicNetworkAccess
          serializedName: publicNetworkAccess
          language: !Languages 
            default:
              name: publicNetworkAccess
              description: >-
                Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is
                'Enabled'
          protocol: !Protocols {}
        - !Property 
          schema: !ObjectSchema &ref_56
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            properties:
              - !Property 
                schema: *ref_48
                required: true
                serializedName: name
                language: !Languages 
                  default:
                    name: name
                    description: 'The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)'
                protocol: !Protocols {}
              - !Property 
                schema: *ref_49
                required: true
                serializedName: family
                language: !Languages 
                  default:
                    name: family
                    description: 'The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).'
                protocol: !Protocols {}
              - !Property 
                schema: *ref_50
                required: true
                serializedName: capacity
                language: !Languages 
                  default:
                    name: capacity
                    description: 'The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).'
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !Languages 
              default:
                name: Sku
                description: SKU parameters supplied to the create Redis operation.
                namespace: ''
            protocol: !Protocols {}
          flattenedNames:
            - properties
            - sku
          required: true
          serializedName: sku
          language: !Languages 
            default:
              name: sku
              description: The SKU of the Redis cache to deploy.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_51
          flattenedNames:
            - properties
            - subnetId
          required: false
          serializedName: subnetId
          language: !Languages 
            default:
              name: subnetId
              description: >-
                The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
          protocol: !Protocols {}
        - !Property 
          schema: *ref_52
          flattenedNames:
            - properties
            - staticIP
          required: false
          serializedName: staticIP
          extensions: &ref_75
            x-ms-mutability:
              - read
              - create
          language: !Languages 
            default:
              name: staticIP
              description: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: RedisCreateParameters
          description: Parameters supplied to the Create Redis operation.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_53
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      children: !Relations 
        all:
          - !ObjectSchema &ref_54
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            parents: !Relations 
              all:
                - *ref_53
                - !ObjectSchema &ref_55
                  type: object
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-12-01'
                  children: !Relations 
                    all:
                      - *ref_53
                      - *ref_54
                      - !ObjectSchema &ref_57
                        type: object
                        apiVersions:
                          - !ApiVersion 
                            version: '2020-12-01'
                        parents: !Relations 
                          all:
                            - *ref_55
                          immediate:
                            - *ref_55
                        properties:
                          - !Property 
                            schema: *ref_56
                            serializedName: sku
                            language: !Languages 
                              default:
                                name: sku
                                description: The SKU of the Redis cache to deploy.
                            protocol: !Protocols {}
                        serializationFormats:
                          - json
                        usage:
                          - input
                          - output
                        extensions:
                          x-ms-external: true
                          x-ms-flattened: true
                        language: !Languages 
                          default:
                            name: RedisUpdateProperties
                            description: Patchable properties of the redis cache.
                            namespace: ''
                        protocol: !Protocols {}
                    immediate:
                      - *ref_53
                      - *ref_57
                  properties:
                    - !Property 
                      schema: *ref_58
                      serializedName: redisConfiguration
                      language: !Languages 
                        default:
                          name: redisConfiguration
                          description: >-
                            All Redis Settings. Few possible keys:
                            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
                            etc.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_40
                      serializedName: redisVersion
                      language: !Languages 
                        default:
                          name: redisVersion
                          description: 'Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)'
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_41
                      serializedName: enableNonSslPort
                      language: !Languages 
                        default:
                          name: enableNonSslPort
                          description: Specifies whether the non-ssl Redis server port (6379) is enabled.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_42
                      serializedName: replicasPerMaster
                      language: !Languages 
                        default:
                          name: replicasPerMaster
                          description: The number of replicas to be created per primary.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_43
                      serializedName: replicasPerPrimary
                      language: !Languages 
                        default:
                          name: replicasPerPrimary
                          description: The number of replicas to be created per primary.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_44
                      serializedName: tenantSettings
                      language: !Languages 
                        default:
                          name: tenantSettings
                          description: A dictionary of tenant settings
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_45
                      serializedName: shardCount
                      language: !Languages 
                        default:
                          name: shardCount
                          description: The number of shards to be created on a Premium Cluster Cache.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_46
                      serializedName: minimumTlsVersion
                      language: !Languages 
                        default:
                          name: minimumTlsVersion
                          description: 'Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2'')'
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_47
                      serializedName: publicNetworkAccess
                      language: !Languages 
                        default:
                          name: publicNetworkAccess
                          description: >-
                            Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default
                            value is 'Enabled'
                      protocol: !Protocols {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                    - output
                  extensions:
                    x-ms-external: true
                  language: !Languages 
                    default:
                      name: RedisCommonProperties
                      description: Create/Update/Get common properties of the redis cache.
                      namespace: ''
                  protocol: !Protocols {}
              immediate:
                - *ref_53
            properties:
              - !Property 
                schema: *ref_59
                readOnly: true
                serializedName: provisioningState
                language: !Languages 
                  default:
                    name: provisioningState
                    description: Redis instance provisioning status.
                protocol: !Protocols {}
              - !Property 
                schema: *ref_60
                readOnly: true
                serializedName: hostName
                language: !Languages 
                  default:
                    name: hostName
                    description: Redis host name.
                protocol: !Protocols {}
              - !Property 
                schema: *ref_61
                readOnly: true
                serializedName: port
                language: !Languages 
                  default:
                    name: port
                    description: Redis non-SSL port.
                protocol: !Protocols {}
              - !Property 
                schema: *ref_62
                readOnly: true
                serializedName: sslPort
                language: !Languages 
                  default:
                    name: sslPort
                    description: Redis SSL port.
                protocol: !Protocols {}
              - !Property 
                schema: !ObjectSchema &ref_76
                  type: object
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-12-01'
                  properties:
                    - !Property 
                      schema: *ref_63
                      readOnly: true
                      serializedName: primaryKey
                      language: !Languages 
                        default:
                          name: primaryKey
                          description: The current primary key that clients can use to authenticate with Redis cache.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_64
                      readOnly: true
                      serializedName: secondaryKey
                      language: !Languages 
                        default:
                          name: secondaryKey
                          description: The current secondary key that clients can use to authenticate with Redis cache.
                      protocol: !Protocols {}
                  serializationFormats:
                    - json
                  usage:
                    - output
                    - input
                  language: !Languages 
                    default:
                      name: RedisAccessKeys
                      description: Redis cache access keys.
                      namespace: ''
                  protocol: !Protocols {}
                readOnly: true
                serializedName: accessKeys
                language: !Languages 
                  default:
                    name: accessKeys
                    description: The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache
                protocol: !Protocols {}
              - !Property 
                schema: !ArraySchema &ref_77
                  type: array
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-12-01'
                  elementType: !ObjectSchema &ref_109
                    type: object
                    apiVersions:
                      - !ApiVersion 
                        version: '2020-12-01'
                    properties:
                      - !Property 
                        schema: *ref_65
                        readOnly: true
                        serializedName: id
                        language: !Languages 
                          default:
                            name: id
                            description: Linked server Id.
                        protocol: !Protocols {}
                    serializationFormats:
                      - json
                    usage:
                      - input
                      - output
                    language: !Languages 
                      default:
                        name: RedisLinkedServer
                        description: Linked server Id
                        namespace: ''
                    protocol: !Protocols {}
                  language: !Languages 
                    default:
                      name: RedisPropertiesLinkedServers
                      description: List of the linked servers associated with the cache
                  protocol: !Protocols {}
                readOnly: true
                serializedName: linkedServers
                language: !Languages 
                  default:
                    name: linkedServers
                    description: List of the linked servers associated with the cache
                protocol: !Protocols {}
              - !Property 
                schema: !ArraySchema &ref_78
                  type: array
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-12-01'
                  elementType: !ObjectSchema &ref_110
                    type: object
                    apiVersions:
                      - !ApiVersion 
                        version: '2020-12-01'
                    properties:
                      - !Property 
                        schema: *ref_66
                        readOnly: true
                        serializedName: sslPort
                        language: !Languages 
                          default:
                            name: sslPort
                            description: Redis instance SSL port.
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_67
                        readOnly: true
                        serializedName: nonSslPort
                        language: !Languages 
                          default:
                            name: nonSslPort
                            description: If enableNonSslPort is true, provides Redis instance Non-SSL port.
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_68
                        readOnly: true
                        serializedName: zone
                        language: !Languages 
                          default:
                            name: zone
                            description: If the Cache uses availability zones, specifies availability zone where this instance is located.
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_69
                        readOnly: true
                        serializedName: shardId
                        language: !Languages 
                          default:
                            name: shardId
                            description: If clustering is enabled, the Shard ID of Redis Instance
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_70
                        readOnly: true
                        serializedName: isMaster
                        language: !Languages 
                          default:
                            name: isMaster
                            description: Specifies whether the instance is a primary node.
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_70
                        readOnly: true
                        serializedName: isPrimary
                        language: !Languages 
                          default:
                            name: isPrimary
                            description: Specifies whether the instance is a primary node.
                        protocol: !Protocols {}
                    serializationFormats:
                      - json
                    usage:
                      - input
                      - output
                    language: !Languages 
                      default:
                        name: RedisInstanceDetails
                        description: Details of single instance of redis.
                        namespace: ''
                    protocol: !Protocols {}
                  language: !Languages 
                    default:
                      name: RedisPropertiesInstances
                      description: List of the Redis instances associated with the cache
                  protocol: !Protocols {}
                readOnly: true
                serializedName: instances
                language: !Languages 
                  default:
                    name: instances
                    description: List of the Redis instances associated with the cache
                protocol: !Protocols {}
              - !Property 
                schema: !ArraySchema &ref_79
                  type: array
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-12-01'
                  elementType: !ObjectSchema &ref_71
                    type: object
                    apiVersions:
                      - !ApiVersion 
                        version: '1.0'
                    parents: !Relations 
                      all:
                        - !ObjectSchema &ref_73
                          type: object
                          apiVersions:
                            - !ApiVersion 
                              version: '2.0'
                            - !ApiVersion 
                              version: '1.0'
                          children: !Relations 
                            all:
                              - *ref_71
                              - !ObjectSchema &ref_72
                                type: object
                                apiVersions:
                                  - !ApiVersion 
                                    version: '2.0'
                                children: !Relations 
                                  all:
                                    - !ObjectSchema &ref_80
                                      type: object
                                      apiVersions:
                                        - !ApiVersion 
                                          version: '2020-12-01'
                                      parents: !Relations 
                                        all:
                                          - *ref_72
                                          - *ref_73
                                        immediate:
                                          - *ref_72
                                      properties:
                                        - !Property 
                                          schema: !ArraySchema &ref_137
                                            type: array
                                            apiVersions:
                                              - !ApiVersion 
                                                version: '2020-12-01'
                                            elementType: *ref_74
                                            language: !Languages 
                                              default:
                                                name: RedisResourceZones
                                                description: A list of availability zones denoting where the resource needs to come from.
                                            protocol: !Protocols {}
                                          required: false
                                          serializedName: zones
                                          language: !Languages 
                                            default:
                                              name: zones
                                              description: A list of availability zones denoting where the resource needs to come from.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_58
                                          flattenedNames:
                                            - properties
                                            - redisConfiguration
                                          serializedName: redisConfiguration
                                          language: !Languages 
                                            default:
                                              name: redisConfiguration
                                              description: >-
                                                All Redis Settings. Few possible keys:
                                                rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
                                                etc.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_40
                                          flattenedNames:
                                            - properties
                                            - redisVersion
                                          serializedName: redisVersion
                                          language: !Languages 
                                            default:
                                              name: redisVersion
                                              description: 'Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)'
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_41
                                          flattenedNames:
                                            - properties
                                            - enableNonSslPort
                                          serializedName: enableNonSslPort
                                          language: !Languages 
                                            default:
                                              name: enableNonSslPort
                                              description: Specifies whether the non-ssl Redis server port (6379) is enabled.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_42
                                          flattenedNames:
                                            - properties
                                            - replicasPerMaster
                                          serializedName: replicasPerMaster
                                          language: !Languages 
                                            default:
                                              name: replicasPerMaster
                                              description: The number of replicas to be created per primary.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_43
                                          flattenedNames:
                                            - properties
                                            - replicasPerPrimary
                                          serializedName: replicasPerPrimary
                                          language: !Languages 
                                            default:
                                              name: replicasPerPrimary
                                              description: The number of replicas to be created per primary.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_44
                                          flattenedNames:
                                            - properties
                                            - tenantSettings
                                          serializedName: tenantSettings
                                          language: !Languages 
                                            default:
                                              name: tenantSettings
                                              description: A dictionary of tenant settings
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_45
                                          flattenedNames:
                                            - properties
                                            - shardCount
                                          serializedName: shardCount
                                          language: !Languages 
                                            default:
                                              name: shardCount
                                              description: The number of shards to be created on a Premium Cluster Cache.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_46
                                          flattenedNames:
                                            - properties
                                            - minimumTlsVersion
                                          serializedName: minimumTlsVersion
                                          language: !Languages 
                                            default:
                                              name: minimumTlsVersion
                                              description: 'Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2'')'
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_47
                                          flattenedNames:
                                            - properties
                                            - publicNetworkAccess
                                          serializedName: publicNetworkAccess
                                          language: !Languages 
                                            default:
                                              name: publicNetworkAccess
                                              description: >-
                                                Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access
                                                method. Default value is 'Enabled'
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_56
                                          flattenedNames:
                                            - properties
                                            - sku
                                          required: true
                                          serializedName: sku
                                          language: !Languages 
                                            default:
                                              name: sku
                                              description: The SKU of the Redis cache to deploy.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_51
                                          flattenedNames:
                                            - properties
                                            - subnetId
                                          required: false
                                          serializedName: subnetId
                                          language: !Languages 
                                            default:
                                              name: subnetId
                                              description: >-
                                                The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format:
                                                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_52
                                          flattenedNames:
                                            - properties
                                            - staticIP
                                          required: false
                                          serializedName: staticIP
                                          extensions: *ref_75
                                          language: !Languages 
                                            default:
                                              name: staticIP
                                              description: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_59
                                          flattenedNames:
                                            - properties
                                            - provisioningState
                                          readOnly: true
                                          serializedName: provisioningState
                                          language: !Languages 
                                            default:
                                              name: provisioningState
                                              description: Redis instance provisioning status.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_60
                                          flattenedNames:
                                            - properties
                                            - hostName
                                          readOnly: true
                                          serializedName: hostName
                                          language: !Languages 
                                            default:
                                              name: hostName
                                              description: Redis host name.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_61
                                          flattenedNames:
                                            - properties
                                            - port
                                          readOnly: true
                                          serializedName: port
                                          language: !Languages 
                                            default:
                                              name: port
                                              description: Redis non-SSL port.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_62
                                          flattenedNames:
                                            - properties
                                            - sslPort
                                          readOnly: true
                                          serializedName: sslPort
                                          language: !Languages 
                                            default:
                                              name: sslPort
                                              description: Redis SSL port.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_76
                                          flattenedNames:
                                            - properties
                                            - accessKeys
                                          readOnly: true
                                          serializedName: accessKeys
                                          language: !Languages 
                                            default:
                                              name: accessKeys
                                              description: The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_77
                                          flattenedNames:
                                            - properties
                                            - linkedServers
                                          readOnly: true
                                          serializedName: linkedServers
                                          language: !Languages 
                                            default:
                                              name: linkedServers
                                              description: List of the linked servers associated with the cache
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_78
                                          flattenedNames:
                                            - properties
                                            - instances
                                          readOnly: true
                                          serializedName: instances
                                          language: !Languages 
                                            default:
                                              name: instances
                                              description: List of the Redis instances associated with the cache
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_79
                                          flattenedNames:
                                            - properties
                                            - privateEndpointConnections
                                          readOnly: true
                                          serializedName: privateEndpointConnections
                                          language: !Languages 
                                            default:
                                              name: privateEndpointConnections
                                              description: List of private endpoint connection associated with the specified redis cache
                                          protocol: !Protocols {}
                                      serializationFormats:
                                        - json
                                      usage:
                                        - output
                                        - input
                                      language: !Languages 
                                        default:
                                          name: RedisResource
                                          description: A single Redis item in List or Get Operation.
                                          namespace: ''
                                      protocol: !Protocols {}
                                  immediate:
                                    - *ref_80
                                parents: !Relations 
                                  all:
                                    - *ref_73
                                  immediate:
                                    - *ref_73
                                properties:
                                  - !Property 
                                    schema: *ref_81
                                    required: false
                                    serializedName: tags
                                    extensions:
                                      x-ms-mutability:
                                        - read
                                        - create
                                        - update
                                    language: !Languages 
                                      default:
                                        name: tags
                                        description: Resource tags.
                                    protocol: !Protocols {}
                                  - !Property 
                                    schema: *ref_82
                                    required: true
                                    serializedName: location
                                    extensions:
                                      x-ms-mutability:
                                        - read
                                        - create
                                    language: !Languages 
                                      default:
                                        name: location
                                        description: The geo-location where the resource lives
                                    protocol: !Protocols {}
                                serializationFormats:
                                  - json
                                summary: Tracked Resource
                                usage:
                                  - input
                                  - output
                                language: !Languages 
                                  default:
                                    name: TrackedResource
                                    description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
                                    namespace: ''
                                    summary: Tracked Resource
                                protocol: !Protocols {}
                              - *ref_80
                              - !ObjectSchema &ref_84
                                type: object
                                apiVersions:
                                  - !ApiVersion 
                                    version: '2.0'
                                children: !Relations 
                                  all:
                                    - !ObjectSchema &ref_83
                                      type: object
                                      apiVersions:
                                        - !ApiVersion 
                                          version: '2020-12-01'
                                      children: !Relations 
                                        all:
                                          - !ObjectSchema &ref_85
                                            type: object
                                            apiVersions:
                                              - !ApiVersion 
                                                version: '2020-12-01'
                                            parents: !Relations 
                                              all:
                                                - *ref_83
                                                - *ref_84
                                                - *ref_73
                                              immediate:
                                                - *ref_83
                                            serializationFormats:
                                              - json
                                            usage:
                                              - input
                                              - output
                                            language: !Languages 
                                              default:
                                                name: RedisFirewallRuleCreateParameters
                                                description: Parameters required for creating a firewall rule on redis cache. (Note, you can just use the FirewallRule type instead now.)
                                                namespace: ''
                                            protocol: !Protocols {}
                                        immediate:
                                          - *ref_85
                                      parents: !Relations 
                                        all:
                                          - *ref_84
                                          - *ref_73
                                        immediate:
                                          - *ref_84
                                      properties:
                                        - !Property 
                                          schema: *ref_86
                                          flattenedNames:
                                            - properties
                                            - startIP
                                          required: true
                                          serializedName: startIP
                                          language: !Languages 
                                            default:
                                              name: startIP
                                              description: lowest IP address included in the range
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_87
                                          flattenedNames:
                                            - properties
                                            - endIP
                                          required: true
                                          serializedName: endIP
                                          language: !Languages 
                                            default:
                                              name: endIP
                                              description: highest IP address included in the range
                                          protocol: !Protocols {}
                                      serializationFormats:
                                        - json
                                      usage:
                                        - input
                                        - output
                                      language: !Languages 
                                        default:
                                          name: RedisFirewallRule
                                          description: A firewall rule on a redis cache has a name, and describes a contiguous range of IP addresses permitted to connect
                                          namespace: ''
                                      protocol: !Protocols {}
                                    - !ObjectSchema &ref_95
                                      type: object
                                      apiVersions:
                                        - !ApiVersion 
                                          version: '2020-12-01'
                                      parents: !Relations 
                                        all:
                                          - *ref_84
                                          - *ref_73
                                        immediate:
                                          - *ref_84
                                      properties:
                                        - !Property 
                                          schema: !ArraySchema &ref_142
                                            type: array
                                            apiVersions:
                                              - !ApiVersion 
                                                version: '2020-12-01'
                                            elementType: !ObjectSchema &ref_127
                                              type: object
                                              apiVersions:
                                                - !ApiVersion 
                                                  version: '2020-12-01'
                                              properties:
                                                - !Property 
                                                  schema: *ref_88
                                                  required: true
                                                  serializedName: dayOfWeek
                                                  language: !Languages 
                                                    default:
                                                      name: dayOfWeek
                                                      description: Day of the week when a cache can be patched.
                                                  protocol: !Protocols {}
                                                - !Property 
                                                  schema: *ref_89
                                                  required: true
                                                  serializedName: startHourUtc
                                                  language: !Languages 
                                                    default:
                                                      name: startHourUtc
                                                      description: Start hour after which cache patching can start.
                                                  protocol: !Protocols {}
                                                - !Property 
                                                  schema: *ref_90
                                                  required: false
                                                  serializedName: maintenanceWindow
                                                  language: !Languages 
                                                    default:
                                                      name: maintenanceWindow
                                                      description: 'ISO8601 timespan specifying how much time cache patching can take. '
                                                  protocol: !Protocols {}
                                              serializationFormats:
                                                - json
                                              usage:
                                                - input
                                                - output
                                              language: !Languages 
                                                default:
                                                  name: ScheduleEntry
                                                  description: Patch schedule entry for a Premium Redis Cache.
                                                  namespace: ''
                                              protocol: !Protocols {}
                                            language: !Languages 
                                              default:
                                                name: ScheduleEntries
                                                description: List of patch schedules for a Redis cache.
                                            protocol: !Protocols {}
                                          flattenedNames:
                                            - properties
                                            - scheduleEntries
                                          required: true
                                          serializedName: scheduleEntries
                                          language: !Languages 
                                            default:
                                              name: scheduleEntries
                                              description: List of patch schedules for a Redis cache.
                                          protocol: !Protocols {}
                                      serializationFormats:
                                        - json
                                      usage:
                                        - input
                                        - output
                                      language: !Languages 
                                        default:
                                          name: RedisPatchSchedule
                                          description: Response to put/get patch schedules for Redis cache.
                                          namespace: ''
                                      protocol: !Protocols {}
                                    - !ObjectSchema &ref_96
                                      type: object
                                      apiVersions:
                                        - !ApiVersion 
                                          version: '2020-12-01'
                                      parents: !Relations 
                                        all:
                                          - *ref_84
                                          - *ref_73
                                        immediate:
                                          - *ref_84
                                      properties:
                                        - !Property 
                                          schema: *ref_91
                                          flattenedNames:
                                            - properties
                                            - linkedRedisCacheId
                                          serializedName: linkedRedisCacheId
                                          language: !Languages 
                                            default:
                                              name: linkedRedisCacheId
                                              description: Fully qualified resourceId of the linked redis cache.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_92
                                          flattenedNames:
                                            - properties
                                            - linkedRedisCacheLocation
                                          serializedName: linkedRedisCacheLocation
                                          extensions: &ref_128
                                            x-ms-mutability:
                                              - create
                                              - read
                                          language: !Languages 
                                            default:
                                              name: linkedRedisCacheLocation
                                              description: Location of the linked redis cache.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_93
                                          flattenedNames:
                                            - properties
                                            - serverRole
                                          serializedName: serverRole
                                          language: !Languages 
                                            default:
                                              name: serverRole
                                              description: Role of the linked server.
                                          protocol: !Protocols {}
                                        - !Property 
                                          schema: *ref_94
                                          flattenedNames:
                                            - properties
                                            - provisioningState
                                          readOnly: true
                                          serializedName: provisioningState
                                          language: !Languages 
                                            default:
                                              name: provisioningState
                                              description: Terminal state of the link between primary and secondary redis cache.
                                          protocol: !Protocols {}
                                      serializationFormats:
                                        - json
                                      usage:
                                        - output
                                        - input
                                      language: !Languages 
                                        default:
                                          name: RedisLinkedServerWithProperties
                                          description: Response to put/get linked server (with properties) for Redis cache.
                                          namespace: ''
                                      protocol: !Protocols {}
                                    - *ref_85
                                  immediate:
                                    - *ref_83
                                    - *ref_95
                                    - *ref_96
                                parents: !Relations 
                                  all:
                                    - *ref_73
                                  immediate:
                                    - *ref_73
                                serializationFormats:
                                  - json
                                summary: Proxy Resource
                                usage:
                                  - input
                                  - output
                                language: !Languages 
                                  default:
                                    name: ProxyResource
                                    description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
                                    namespace: ''
                                    summary: Proxy Resource
                                protocol: !Protocols {}
                              - *ref_83
                              - *ref_95
                              - *ref_96
                              - !ObjectSchema &ref_100
                                type: object
                                apiVersions:
                                  - !ApiVersion 
                                    version: '1.0'
                                parents: !Relations 
                                  all:
                                    - *ref_73
                                  immediate:
                                    - *ref_73
                                properties:
                                  - !Property 
                                    schema: *ref_97
                                    flattenedNames:
                                      - properties
                                      - groupId
                                    readOnly: true
                                    serializedName: groupId
                                    language: !Languages 
                                      default:
                                        name: groupId
                                        description: The private link resource group id.
                                    protocol: !Protocols {}
                                  - !Property 
                                    schema: !ArraySchema &ref_146
                                      type: array
                                      apiVersions:
                                        - !ApiVersion 
                                          version: '1.0'
                                      elementType: *ref_98
                                      language: !Languages 
                                        default:
                                          name: PrivateLinkResourcePropertiesRequiredMembers
                                          description: The private link resource required member names.
                                      protocol: !Protocols {}
                                    flattenedNames:
                                      - properties
                                      - requiredMembers
                                    readOnly: true
                                    serializedName: requiredMembers
                                    language: !Languages 
                                      default:
                                        name: requiredMembers
                                        description: The private link resource required member names.
                                    protocol: !Protocols {}
                                  - !Property 
                                    schema: !ArraySchema &ref_147
                                      type: array
                                      apiVersions:
                                        - !ApiVersion 
                                          version: '1.0'
                                      elementType: *ref_99
                                      language: !Languages 
                                        default:
                                          name: PrivateLinkResourcePropertiesRequiredZoneNames
                                          description: The private link resource Private link DNS zone name.
                                      protocol: !Protocols {}
                                    flattenedNames:
                                      - properties
                                      - requiredZoneNames
                                    serializedName: requiredZoneNames
                                    language: !Languages 
                                      default:
                                        name: requiredZoneNames
                                        description: The private link resource Private link DNS zone name.
                                    protocol: !Protocols {}
                                serializationFormats:
                                  - json
                                usage:
                                  - input
                                  - output
                                language: !Languages 
                                  default:
                                    name: PrivateLinkResource
                                    description: A private link resource
                                    namespace: ''
                                protocol: !Protocols {}
                              - *ref_85
                            immediate:
                              - *ref_71
                              - *ref_72
                              - *ref_84
                              - *ref_100
                          properties:
                            - !Property 
                              schema: *ref_101
                              readOnly: true
                              serializedName: id
                              language: !Languages 
                                default:
                                  name: id
                                  description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                              protocol: !Protocols {}
                            - !Property 
                              schema: *ref_102
                              readOnly: true
                              serializedName: name
                              language: !Languages 
                                default:
                                  name: name
                                  description: The name of the resource
                              protocol: !Protocols {}
                            - !Property 
                              schema: *ref_103
                              readOnly: true
                              serializedName: type
                              language: !Languages 
                                default:
                                  name: type
                                  description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
                              protocol: !Protocols {}
                          serializationFormats:
                            - json
                          summary: Resource
                          usage:
                            - input
                            - output
                          extensions:
                            x-ms-azure-resource: true
                          language: !Languages 
                            default:
                              name: Resource
                              description: Common fields that are returned in the response for all Azure Resource Manager resources
                              namespace: ''
                              summary: Resource
                          protocol: !Protocols {}
                      immediate:
                        - *ref_73
                    properties:
                      - !Property 
                        schema: !ObjectSchema &ref_111
                          type: object
                          apiVersions:
                            - !ApiVersion 
                              version: '1.0'
                          properties:
                            - !Property 
                              schema: *ref_104
                              readOnly: true
                              serializedName: id
                              language: !Languages 
                                default:
                                  name: id
                                  description: The ARM identifier for Private Endpoint
                              protocol: !Protocols {}
                          serializationFormats:
                            - json
                          usage:
                            - input
                            - output
                          language: !Languages 
                            default:
                              name: PrivateEndpoint
                              description: The Private Endpoint resource.
                              namespace: ''
                          protocol: !Protocols {}
                        flattenedNames:
                          - properties
                          - privateEndpoint
                        serializedName: privateEndpoint
                        language: !Languages 
                          default:
                            name: privateEndpoint
                            description: The resource of private end point.
                        protocol: !Protocols {}
                      - !Property 
                        schema: !ObjectSchema &ref_112
                          type: object
                          apiVersions:
                            - !ApiVersion 
                              version: '1.0'
                          properties:
                            - !Property 
                              schema: *ref_105
                              serializedName: status
                              language: !Languages 
                                default:
                                  name: status
                                  description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
                              protocol: !Protocols {}
                            - !Property 
                              schema: *ref_106
                              serializedName: description
                              language: !Languages 
                                default:
                                  name: description
                                  description: The reason for approval/rejection of the connection.
                              protocol: !Protocols {}
                            - !Property 
                              schema: *ref_107
                              serializedName: actionsRequired
                              language: !Languages 
                                default:
                                  name: actionsRequired
                                  description: A message indicating if changes on the service provider require any updates on the consumer.
                              protocol: !Protocols {}
                          serializationFormats:
                            - json
                          usage:
                            - input
                            - output
                          language: !Languages 
                            default:
                              name: PrivateLinkServiceConnectionState
                              description: A collection of information about the state of the connection between service consumer and provider.
                              namespace: ''
                          protocol: !Protocols {}
                        flattenedNames:
                          - properties
                          - privateLinkServiceConnectionState
                        serializedName: privateLinkServiceConnectionState
                        language: !Languages 
                          default:
                            name: privateLinkServiceConnectionState
                            description: A collection of information about the state of the connection between service consumer and provider.
                        protocol: !Protocols {}
                      - !Property 
                        schema: *ref_108
                        flattenedNames:
                          - properties
                          - provisioningState
                        readOnly: true
                        serializedName: provisioningState
                        language: !Languages 
                          default:
                            name: provisioningState
                            description: The provisioning state of the private endpoint connection resource.
                        protocol: !Protocols {}
                    serializationFormats:
                      - json
                    usage:
                      - output
                      - input
                    language: !Languages 
                      default:
                        name: PrivateEndpointConnection
                        description: The Private Endpoint Connection resource.
                        namespace: ''
                    protocol: !Protocols {}
                  language: !Languages 
                    default:
                      name: RedisPropertiesPrivateEndpointConnections
                      description: List of private endpoint connection associated with the specified redis cache
                  protocol: !Protocols {}
                readOnly: true
                serializedName: privateEndpointConnections
                language: !Languages 
                  default:
                    name: privateEndpointConnections
                    description: List of private endpoint connection associated with the specified redis cache
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            extensions:
              x-ms-external: true
              x-ms-flattened: true
            language: !Languages 
              default:
                name: RedisProperties
                description: Properties of the redis cache.
                namespace: ''
            protocol: !Protocols {}
        immediate:
          - *ref_54
      parents: !Relations 
        all:
          - *ref_55
        immediate:
          - *ref_55
      properties:
        - !Property 
          schema: *ref_56
          required: true
          serializedName: sku
          language: !Languages 
            default:
              name: sku
              description: The SKU of the Redis cache to deploy.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_51
          required: false
          serializedName: subnetId
          language: !Languages 
            default:
              name: subnetId
              description: >-
                The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
          protocol: !Protocols {}
        - !Property 
          schema: *ref_52
          required: false
          serializedName: staticIP
          extensions: *ref_75
          language: !Languages 
            default:
              name: staticIP
              description: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
        - output
      extensions:
        x-ms-external: true
        x-ms-flattened: true
      language: !Languages 
        default:
          name: RedisCreateProperties
          description: Properties supplied to Create Redis operation.
          namespace: ''
      protocol: !Protocols {}
    - *ref_56
    - *ref_55
    - *ref_58
    - *ref_80
    - *ref_54
    - *ref_76
    - *ref_109
    - *ref_110
    - *ref_71
    - *ref_111
    - *ref_112
    - *ref_73
    - *ref_72
    - !ObjectSchema &ref_168
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: *ref_113
          serializedName: tags
          language: !Languages 
            default:
              name: tags
              description: Resource tags.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_58
          flattenedNames:
            - properties
            - redisConfiguration
          serializedName: redisConfiguration
          language: !Languages 
            default:
              name: redisConfiguration
              description: >-
                All Redis Settings. Few possible keys:
                rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
                etc.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_40
          flattenedNames:
            - properties
            - redisVersion
          serializedName: redisVersion
          language: !Languages 
            default:
              name: redisVersion
              description: 'Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)'
          protocol: !Protocols {}
        - !Property 
          schema: *ref_41
          flattenedNames:
            - properties
            - enableNonSslPort
          serializedName: enableNonSslPort
          language: !Languages 
            default:
              name: enableNonSslPort
              description: Specifies whether the non-ssl Redis server port (6379) is enabled.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_42
          flattenedNames:
            - properties
            - replicasPerMaster
          serializedName: replicasPerMaster
          language: !Languages 
            default:
              name: replicasPerMaster
              description: The number of replicas to be created per primary.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_43
          flattenedNames:
            - properties
            - replicasPerPrimary
          serializedName: replicasPerPrimary
          language: !Languages 
            default:
              name: replicasPerPrimary
              description: The number of replicas to be created per primary.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_44
          flattenedNames:
            - properties
            - tenantSettings
          serializedName: tenantSettings
          language: !Languages 
            default:
              name: tenantSettings
              description: A dictionary of tenant settings
          protocol: !Protocols {}
        - !Property 
          schema: *ref_45
          flattenedNames:
            - properties
            - shardCount
          serializedName: shardCount
          language: !Languages 
            default:
              name: shardCount
              description: The number of shards to be created on a Premium Cluster Cache.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_46
          flattenedNames:
            - properties
            - minimumTlsVersion
          serializedName: minimumTlsVersion
          language: !Languages 
            default:
              name: minimumTlsVersion
              description: 'Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2'')'
          protocol: !Protocols {}
        - !Property 
          schema: *ref_47
          flattenedNames:
            - properties
            - publicNetworkAccess
          serializedName: publicNetworkAccess
          language: !Languages 
            default:
              name: publicNetworkAccess
              description: >-
                Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is
                'Enabled'
          protocol: !Protocols {}
        - !Property 
          schema: *ref_56
          flattenedNames:
            - properties
            - sku
          serializedName: sku
          language: !Languages 
            default:
              name: sku
              description: The SKU of the Redis cache to deploy.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: RedisUpdateParameters
          description: Parameters supplied to the Update Redis operation.
          namespace: ''
      protocol: !Protocols {}
    - *ref_57
    - !ObjectSchema &ref_177
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_138
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            elementType: *ref_80
            language: !Languages 
              default:
                name: RedisListResultValue
                description: List of Redis cache instances.
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: List of Redis cache instances.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_114
          readOnly: true
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: Link for next page of results.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: RedisListResult
          description: The response of list Redis operation.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_180
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: *ref_115
          required: true
          serializedName: keyType
          language: !Languages 
            default:
              name: keyType
              description: The Redis access key to regenerate.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: RedisRegenerateKeyParameters
          description: Specifies which Redis access keys to reset.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_184
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: *ref_116
          serializedName: rebootType
          language: !Languages 
            default:
              name: rebootType
              description: Which Redis node(s) to reboot. Depending on this value data loss is possible.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_117
          serializedName: shardId
          language: !Languages 
            default:
              name: shardId
              description: If clustering is enabled, the ID of the shard to be rebooted.
          protocol: !Protocols {}
        - !Property 
          schema: !ArraySchema &ref_139
            type: array
            elementType: *ref_118
            language: !Languages 
              default:
                name: ArrayOfArrayItemschema
                description: A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports.
            protocol: !Protocols {}
          serializedName: ports
          language: !Languages 
            default:
              name: ports
              description: A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: RedisRebootParameters
          description: Specifies which Redis node(s) to reboot.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_188
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: *ref_119
          readOnly: true
          serializedName: message
          language: !Languages 
            default:
              name: message
              description: Status message
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: RedisForceRebootResponse
          description: Response to force reboot for Redis cache.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_189
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: *ref_120
          required: false
          serializedName: format
          language: !Languages 
            default:
              name: format
              description: File format.
          protocol: !Protocols {}
        - !Property 
          schema: !ArraySchema &ref_140
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            elementType: *ref_121
            language: !Languages 
              default:
                name: ImportRDBParametersFiles
                description: files to import.
            protocol: !Protocols {}
          required: true
          serializedName: files
          language: !Languages 
            default:
              name: files
              description: files to import.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: ImportRDBParameters
          description: Parameters for Redis import operation.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_193
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: *ref_122
          required: false
          serializedName: format
          language: !Languages 
            default:
              name: format
              description: File format.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_123
          required: true
          serializedName: prefix
          language: !Languages 
            default:
              name: prefix
              description: Prefix to use for exported files.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_124
          required: true
          serializedName: container
          language: !Languages 
            default:
              name: container
              description: Container name to export to.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: ExportRDBParameters
          description: Parameters for Redis export operation.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_199
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_141
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            elementType: *ref_83
            language: !Languages 
              default:
                name: RedisFirewallRuleListResultValue
                description: Results of the list firewall rules operation.
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: Results of the list firewall rules operation.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_125
          readOnly: true
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: Link for next page of results.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: RedisFirewallRuleListResult
          description: The response of list firewall rules Redis operation.
          namespace: ''
      protocol: !Protocols {}
    - *ref_83
    - *ref_84
    - !ObjectSchema &ref_212
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_143
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            elementType: *ref_95
            language: !Languages 
              default:
                name: RedisPatchScheduleListResultValue
                description: Results of the list patch schedules operation.
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: Results of the list patch schedules operation.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_126
          readOnly: true
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: Link for next page of results.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: RedisPatchScheduleListResult
          description: The response of list patch schedules Redis operation.
          namespace: ''
      protocol: !Protocols {}
    - *ref_95
    - *ref_127
    - !ObjectSchema &ref_224
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: *ref_91
          flattenedNames:
            - properties
            - linkedRedisCacheId
          required: true
          serializedName: linkedRedisCacheId
          language: !Languages 
            default:
              name: linkedRedisCacheId
              description: Fully qualified resourceId of the linked redis cache.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_92
          flattenedNames:
            - properties
            - linkedRedisCacheLocation
          required: true
          serializedName: linkedRedisCacheLocation
          extensions: *ref_128
          language: !Languages 
            default:
              name: linkedRedisCacheLocation
              description: Location of the linked redis cache.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_93
          flattenedNames:
            - properties
            - serverRole
          required: true
          serializedName: serverRole
          language: !Languages 
            default:
              name: serverRole
              description: Role of the linked server.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: RedisLinkedServerCreateParameters
          description: Parameter required for creating a linked server to redis cache.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_129
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      children: !Relations 
        all:
          - !ObjectSchema &ref_130
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            parents: !Relations 
              all:
                - *ref_129
              immediate:
                - *ref_129
            properties:
              - !Property 
                schema: *ref_94
                readOnly: true
                serializedName: provisioningState
                language: !Languages 
                  default:
                    name: provisioningState
                    description: Terminal state of the link between primary and secondary redis cache.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            extensions:
              x-ms-flattened: true
            language: !Languages 
              default:
                name: RedisLinkedServerProperties
                description: Properties of a linked server to be returned in get/put response
                namespace: ''
            protocol: !Protocols {}
        immediate:
          - *ref_130
      properties:
        - !Property 
          schema: *ref_91
          required: true
          serializedName: linkedRedisCacheId
          language: !Languages 
            default:
              name: linkedRedisCacheId
              description: Fully qualified resourceId of the linked redis cache.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_92
          required: true
          serializedName: linkedRedisCacheLocation
          extensions: *ref_128
          language: !Languages 
            default:
              name: linkedRedisCacheLocation
              description: Location of the linked redis cache.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_93
          required: true
          serializedName: serverRole
          language: !Languages 
            default:
              name: serverRole
              description: Role of the linked server.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
        - output
      extensions:
        x-ms-flattened: true
      language: !Languages 
        default:
          name: RedisLinkedServerCreateProperties
          description: Create properties for a linked server
          namespace: ''
      protocol: !Protocols {}
    - *ref_96
    - *ref_130
    - !ObjectSchema &ref_237
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-12-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_144
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-12-01'
            elementType: *ref_96
            language: !Languages 
              default:
                name: RedisLinkedServerWithPropertiesListValue
                description: List of linked servers (with properties) of a Redis cache.
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: List of linked servers (with properties) of a Redis cache.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_131
          readOnly: true
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: Link for next set.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: RedisLinkedServerWithPropertiesList
          description: List of linked servers (with properties) of a Redis cache.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_240
      type: object
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      properties:
        - !Property 
          schema: !ArraySchema &ref_145
            type: array
            apiVersions:
              - !ApiVersion 
                version: '1.0'
            elementType: *ref_71
            language: !Languages 
              default:
                name: PrivateEndpointConnectionListResultValue
                description: Array of private endpoint connections
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: Array of private endpoint connections
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: PrivateEndpointConnectionListResult
          description: List of private endpoint connection associated with the specified storage account
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_254
      type: object
      apiVersions:
        - !ApiVersion 
          version: '1.0'
      properties:
        - !Property 
          schema: !ArraySchema &ref_148
            type: array
            apiVersions:
              - !ApiVersion 
                version: '1.0'
            elementType: *ref_100
            language: !Languages 
              default:
                name: PrivateLinkResourceListResultValue
                description: Array of private link resources
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: Array of private link resources
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: PrivateLinkResourceListResult
          description: A list of private link resources
          namespace: ''
      protocol: !Protocols {}
    - *ref_100
    - *ref_85
  arrays:
    - *ref_132
    - *ref_133
    - *ref_134
    - *ref_135
    - *ref_136
    - *ref_77
    - *ref_78
    - *ref_79
    - *ref_137
    - *ref_138
    - *ref_139
    - *ref_140
    - *ref_141
    - *ref_142
    - *ref_143
    - *ref_144
    - *ref_145
    - *ref_146
    - *ref_147
    - *ref_148
globalParameters:
  - !Parameter &ref_155
    schema: *ref_1
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 0
    language: !Languages 
      default:
        name: SubscriptionId
        description: Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        serializedName: subscriptionId
    protocol: !Protocols 
      http: !HttpParameter 
        in: path
  - !Parameter &ref_150
    schema: *ref_0
    clientDefaultValue: https://management.azure.com
    implementation: Client
    origin: modelerfour:synthesized/host
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !Languages 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !Protocols 
      http: !HttpParameter 
        in: uri
  - !Parameter &ref_151
    schema: *ref_149
    implementation: Client
    origin: modelerfour:synthesized/api-version
    required: true
    language: !Languages 
      default:
        name: apiVersion
        description: Api Version
        serializedName: api-version
    protocol: !Protocols 
      http: !HttpParameter 
        in: query
operationGroups:
  - !OperationGroup 
    $key: Operations
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - *ref_151
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Cache/operations
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_153
            language: !Languages 
              default:
                name: ''
                description: Success. The response describes the list of operations.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: Lists all of the available REST API operations of the Microsoft.Cache provider.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: Operations
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: Redis
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_158
                schema: *ref_157
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters supplied to the CheckNameAvailability Redis operation. The only supported resource type is 'Microsoft.Cache/redis'
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_158
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Cache/CheckNameAvailability
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Name is available
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheCheckNameAvailability:
              parameters:
                api-version: '2020-12-01'
                parameters:
                  name: cacheName
                  type: Microsoft.Cache/Redis
                subscriptionId: subid
              responses:
                '200': {}
        language: !Languages 
          default:
            name: CheckNameAvailability
            description: Checks that the redis cache name is valid and is not already in use.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_160
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_161
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
          - !Parameter &ref_162
            schema: *ref_159
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: history
                description: how many minutes in past to look for upgrade notifications
                serializedName: history
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/listUpgradeNotifications
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_160
          - *ref_161
          - *ref_162
        responses:
          - !SchemaResponse 
            schema: *ref_163
            language: !Languages 
              default:
                name: ''
                description: All upgrade notifications in given time range
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheListUpgradeNotifications:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                history: '5000'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    value:
                      - name: notification1
                        timestamp: '2017-02-16T23:20:50.52Z'
                        upsellNotification: {}
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListUpgradeNotifications
            description: Gets any upgrade notifications for a Redis cache.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_166
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_167
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_165
                schema: *ref_164
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters supplied to the Create Redis operation.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_165
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_166
          - *ref_167
        responses:
          - !SchemaResponse 
            schema: *ref_80
            language: !Languages 
              default:
                name: ''
                description: The existing redis cache was successfully updated. Check provisioningState to see detailed status.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !SchemaResponse 
            schema: *ref_80
            language: !Languages 
              default:
                name: ''
                description: The new redis cache was successfully created. Check provisioningState to see detailed status.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheCreate:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                parameters:
                  location: West US
                  properties:
                    enableNonSslPort: true
                    minimumTlsVersion: '1.2'
                    redisConfiguration:
                      maxmemory-policy: allkeys-lru
                    redisVersion: '4'
                    replicasPerPrimary: 2
                    shardCount: 2
                    sku:
                      name: Premium
                      capacity: 1
                      family: P
                    staticIP: 192.168.0.5
                    subnetId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualNetworks/network1/subnets/subnet1
                  zones:
                    - '1'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: cache1
                    type: Microsoft.Cache/Redis
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                    location: West US
                    properties:
                      accessKeys:
                        primaryKey: <primaryKey>
                        secondaryKey: <secondaryKey>
                      enableNonSslPort: false
                      hostName: cache1.redis.cache.windows.net
                      instances:
                        - isMaster: true
                          isPrimary: true
                          nonSslPort: 13000
                          shardId: 0
                          sslPort: 15000
                          zone: '1'
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13001
                          shardId: 0
                          sslPort: 15001
                          zone: '1'
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13002
                          shardId: 0
                          sslPort: 15002
                          zone: '1'
                        - isMaster: true
                          isPrimary: true
                          nonSslPort: 13003
                          shardId: 1
                          sslPort: 15003
                          zone: '1'
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13004
                          shardId: 1
                          sslPort: 15004
                          zone: '1'
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13005
                          shardId: 1
                          sslPort: 15005
                          zone: '1'
                      minimumTlsVersion: '1.2'
                      port: 6379
                      provisioningState: Succeeded
                      redisConfiguration:
                        maxclients: '1000'
                        maxmemory-delta: '50'
                        maxmemory-reserved: '50'
                      redisVersion: '3.0'
                      replicasPerMaster: 2
                      replicasPerPrimary: 2
                      sku:
                        name: Premium
                        capacity: 1
                        family: P
                      sslPort: 6380
                    tags: {}
                    zones:
                      - '1'
                '201':
                  body:
                    name: cache1
                    type: Microsoft.Cache/Redis
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                    location: West US
                    properties:
                      accessKeys:
                        primaryKey: <primaryKey>
                        secondaryKey: <secondaryKey>
                      enableNonSslPort: false
                      hostName: cache1.redis.cache.windows.net
                      instances:
                        - isMaster: true
                          isPrimary: true
                          nonSslPort: 13000
                          shardId: 0
                          sslPort: 15000
                          zone: '1'
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13001
                          shardId: 0
                          sslPort: 15001
                          zone: '1'
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13002
                          shardId: 0
                          sslPort: 15002
                          zone: '1'
                        - isMaster: true
                          isPrimary: true
                          nonSslPort: 13003
                          shardId: 1
                          sslPort: 15003
                          zone: '1'
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13004
                          shardId: 1
                          sslPort: 15004
                          zone: '1'
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13005
                          shardId: 1
                          sslPort: 15005
                          zone: '1'
                      minimumTlsVersion: '1.2'
                      port: 6379
                      provisioningState: Succeeded
                      redisConfiguration:
                        maxmemory-policy: allkeys-lru
                      redisVersion: 4.0.14
                      replicasPerMaster: 2
                      replicasPerPrimary: 2
                      sku:
                        name: Premium
                        capacity: 1
                        family: P
                      sslPort: 6380
                    tags: {}
                    zones:
                      - '1'
          x-ms-long-running-operation: true
        language: !Languages 
          default:
            name: Create
            description: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_170
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_171
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_169
                schema: *ref_168
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters supplied to the Update Redis operation.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_169
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}
                method: patch
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_170
          - *ref_171
        responses:
          - !SchemaResponse 
            schema: *ref_80
            language: !Languages 
              default:
                name: ''
                description: The existing redis cache was successfully updated. Check provisioningState to see detailed status.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheUpdate:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                parameters:
                  properties:
                    enableNonSslPort: true
                    replicasPerPrimary: 2
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: cache1
                    type: Microsoft.Cache/Redis
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                    location: West US
                    properties:
                      accessKeys:
                        primaryKey: <primaryKey>
                        secondaryKey: <secondaryKey>
                      enableNonSslPort: true
                      hostName: cache1.redis.cache.windows.net
                      instances:
                        - isMaster: true
                          isPrimary: true
                          nonSslPort: 13000
                          sslPort: 15000
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13001
                          sslPort: 15001
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13002
                          sslPort: 15002
                      port: 6379
                      provisioningState: Succeeded
                      redisConfiguration:
                        maxclients: '1000'
                        maxmemory-delta: '50'
                        maxmemory-reserved: '50'
                      redisVersion: '3.0'
                      replicasPerMaster: 2
                      replicasPerPrimary: 2
                      sku:
                        name: Premium
                        capacity: 1
                        family: P
                      sslPort: 6380
                    tags: {}
        language: !Languages 
          default:
            name: Update
            description: Update an existing Redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_172
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_173
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_172
          - *ref_173
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: The redis cache was successfully deleted.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: The redis cache 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '202'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: The redis cache was successfully deleted.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheDelete:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200': {}
                '202':
                  headers:
                    location: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult...
                '204': {}
          x-ms-long-running-operation: true
        language: !Languages 
          default:
            name: Delete
            description: Deletes a Redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_174
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_175
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_174
          - *ref_175
        responses:
          - !SchemaResponse 
            schema: *ref_80
            language: !Languages 
              default:
                name: ''
                description: The redis cache was successfully found.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheGet:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: cache1
                    type: Microsoft.Cache/Redis
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                    location: West US
                    properties:
                      enableNonSslPort: true
                      hostName: cache1.redis.cache.windows.net
                      instances:
                        - isMaster: true
                          isPrimary: true
                          nonSslPort: 13000
                          sslPort: 15000
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13001
                          sslPort: 15001
                        - isMaster: false
                          isPrimary: false
                          nonSslPort: 13002
                          sslPort: 15002
                      linkedServers:
                        - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                      port: 6379
                      privateEndpointConnections:
                        - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/privateEndpointConnections/cachePec
                          properties:
                            privateEndpoint:
                              id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/cachePe
                            privateLinkServiceConnectionState:
                              description: Please approve my connection
                              actionsRequired: None
                              status: Approved
                      provisioningState: Creating
                      publicNetworkAccess: Enabled
                      redisConfiguration: {}
                      redisVersion: '3.2'
                      replicasPerMaster: 2
                      replicasPerPrimary: 2
                      sku:
                        name: Premium
                        capacity: 3
                        family: P
                      sslPort: 6380
                    tags: {}
        language: !Languages 
          default:
            name: Get
            description: Gets a Redis cache (resource description).
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_176
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_176
        responses:
          - !SchemaResponse 
            schema: *ref_177
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheListByResourceGroup:
              parameters:
                api-version: '2020-12-01'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    value:
                      - name: cache1
                        type: Microsoft.Cache/Redis
                        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                        location: West US
                        properties:
                          enableNonSslPort: true
                          hostName: cache1.redis.cache.windows.net
                          port: 6379
                          provisioningState: Creating
                          redisConfiguration: {}
                          redisVersion: '3.2'
                          sku:
                            name: Standard
                            capacity: 6
                            family: C
                          sslPort: 6380
                        tags: {}
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListByResourceGroup
            description: Lists all Redis caches in a resource group.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Cache/redis
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_177
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheList:
              parameters:
                api-version: '2020-12-01'
                subscriptionId: subid
              responses:
                '200':
                  body:
                    value:
                      - name: cache1
                        type: Microsoft.Cache/Redis
                        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                        location: West US
                        properties:
                          enableNonSslPort: true
                          hostName: cache1.redis.cache.windows.net
                          instances:
                            - isMaster: true
                              isPrimary: true
                              nonSslPort: 13000
                              sslPort: 15000
                            - isMaster: false
                              isPrimary: false
                              nonSslPort: 13001
                              sslPort: 15001
                            - isMaster: false
                              isPrimary: false
                              nonSslPort: 13002
                              sslPort: 15002
                          port: 6379
                          provisioningState: Creating
                          redisConfiguration: {}
                          redisVersion: '3.2'
                          replicasPerMaster: 2
                          replicasPerPrimary: 2
                          sku:
                            name: Standard
                            capacity: 6
                            family: C
                          sslPort: 6380
                        tags: {}
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListBySubscription
            description: Gets all Redis caches in the specified subscription.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_178
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_179
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/listKeys
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_178
          - *ref_179
        responses:
          - !SchemaResponse 
            schema: *ref_76
            language: !Languages 
              default:
                name: ''
                description: Lists the keys for the specified Redis cache.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheListKeys:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    primaryKey: <primaryKey>
                    secondaryKey: <secondaryKey>
        language: !Languages 
          default:
            name: ListKeys
            description: Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_182
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_183
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_181
                schema: *ref_180
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Specifies which key to regenerate.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_181
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/regenerateKey
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_182
          - *ref_183
        responses:
          - !SchemaResponse 
            schema: *ref_76
            language: !Languages 
              default:
                name: ''
                description: Lists the regenerated keys for Redis Cache
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheRegenerateKey:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                parameters:
                  keyType: Primary
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    primaryKey: <primaryKey>
                    secondaryKey: <secondaryKey>
        language: !Languages 
          default:
            name: RegenerateKey
            description: Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_186
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_187
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_185
                schema: *ref_184
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Specifies which Redis node(s) to reboot.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_185
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/forceReboot
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_186
          - *ref_187
        responses:
          - !SchemaResponse 
            schema: *ref_188
            language: !Languages 
              default:
                name: ''
                description: Reboot operation successfully enqueued
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheForceReboot:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                parameters:
                  ports:
                    - 13000
                    - 15001
                  rebootType: AllNodes
                  shardId: 0
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    message: reboot operation enqueued
        language: !Languages 
          default:
            name: ForceReboot
            description: Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_191
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_192
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_190
                schema: *ref_189
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters for Redis import operation.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_190
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/import
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_191
          - *ref_192
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Import operation succeeded.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Import operation successfully enqueued; follow the Location header to poll for final outcome.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '202'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Import operation succeeded.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheImport:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                parameters:
                  format: RDB
                  files:
                    - http://fileuris.contoso.com/pathtofile1
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200': {}
                '202':
                  headers:
                    location: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult...
                '204': {}
          x-ms-long-running-operation: true
        language: !Languages 
          default:
            name: ImportData
            description: Import data into Redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_195
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_196
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_194
                schema: *ref_193
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters for Redis export operation.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_194
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/export
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_195
          - *ref_196
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Export operation succeeded.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Export operation successfully enqueued; follow the Location header to poll for final outcome.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '202'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Export operation succeeded.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheExport:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                parameters:
                  format: RDB
                  container: https://contosostorage.blob.core.window.net/urltoBlobContainer?sasKeyParameters
                  prefix: datadump1
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200': {}
                '202':
                  headers:
                    location: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult...
                '204': {}
          x-ms-long-running-operation: true
        language: !Languages 
          default:
            name: ExportData
            description: Export data from the redis cache to blobs in a container.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: Redis
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: FirewallRules
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - *ref_151
          - *ref_155
          - !Parameter &ref_197
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_198
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_197
          - *ref_198
        responses:
          - !SchemaResponse 
            schema: *ref_199
            language: !Languages 
              default:
                name: ''
                description: Successfully got the current rules
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheFirewallRulesList:
              parameters:
                api-version: '2020-12-01'
                cacheName: cache1
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    value:
                      - name: rule1
                        type: Microsoft.Cache/Redis/firewallRules
                        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1
                        properties:
                          endIP: 192.168.1.4
                          startIP: 192.168.1.1
                      - name: rule2
                        type: Microsoft.Cache/Redis/firewallRules
                        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule2
                        properties:
                          endIP: 192.169.1.255
                          startIP: 192.169.1.0
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: Gets all firewall rules in the specified redis cache.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_201
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_202
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_203
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: ruleName
                description: The name of the firewall rule.
                serializedName: ruleName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_200
                schema: *ref_83
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters supplied to the create or update redis firewall rule operation.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_200
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules/{ruleName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_201
          - *ref_202
          - *ref_203
        responses:
          - !SchemaResponse 
            schema: *ref_83
            language: !Languages 
              default:
                name: ''
                description: Resource was successfully updated
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !SchemaResponse 
            schema: *ref_83
            language: !Languages 
              default:
                name: ''
                description: Resource was successfully created
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheFirewallRuleCreate:
              parameters:
                api-version: '2020-12-01'
                cacheName: cache1
                parameters:
                  properties:
                    endIP: 192.168.1.4
                    startIP: 192.168.1.1
                resourceGroupName: rg1
                ruleName: rule1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: cache1/rule1
                    type: Microsoft.Cache/Redis/firewallRules
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1
                    properties:
                      endIP: 192.168.1.4
                      startIP: 192.168.1.1
                '201':
                  body:
                    name: cache1/rule1
                    type: Microsoft.Cache/Redis/firewallRules
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1
                    properties:
                      endIP: 192.168.1.4
                      startIP: 192.168.1.1
        language: !Languages 
          default:
            name: CreateOrUpdate
            description: Create or update a redis cache firewall rule
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_204
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_205
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_206
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: ruleName
                description: The name of the firewall rule.
                serializedName: ruleName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules/{ruleName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_204
          - *ref_205
          - *ref_206
        responses:
          - !SchemaResponse 
            schema: *ref_83
            language: !Languages 
              default:
                name: ''
                description: Successfully found the rule
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheFirewallRuleGet:
              parameters:
                api-version: '2020-12-01'
                cacheName: cache1
                resourceGroupName: rg1
                ruleName: rule1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: cache1/rule1
                    type: Microsoft.Cache/Redis/firewallRules
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1
                    properties:
                      endIP: 192.168.1.4
                      startIP: 192.168.1.1
        language: !Languages 
          default:
            name: Get
            description: Gets a single firewall rule in a specified redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_207
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_208
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_209
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: ruleName
                description: The name of the firewall rule.
                serializedName: ruleName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules/{ruleName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_207
          - *ref_208
          - *ref_209
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Successfully deleted the rule
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Successfully deleted the rule
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheFirewallRuleDelete:
              parameters:
                api-version: '2020-12-01'
                cacheName: cache1
                resourceGroupName: rg1
                ruleName: rule1
                subscriptionId: subid
              responses:
                '200': {}
                '204': {}
        language: !Languages 
          default:
            name: Delete
            description: Deletes a single firewall rule in a specified redis cache.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: FirewallRules
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: PatchSchedules
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - *ref_151
          - *ref_155
          - !Parameter &ref_210
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_211
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/patchSchedules
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_210
          - *ref_211
        responses:
          - !SchemaResponse 
            schema: *ref_212
            language: !Languages 
              default:
                name: ''
                description: Successfully got the current patch schedules
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCachePatchSchedulesList:
              parameters:
                api-version: '2020-12-01'
                cacheName: cache1
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    value:
                      - name: default
                        type: Microsoft.Cache/Redis/patchSchedules
                        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default
                        properties:
                          scheduleEntries:
                            - dayOfWeek: Monday
                              maintenanceWindow: PT5H
                              startHourUtc: 12
                            - dayOfWeek: Tuesday
                              startHourUtc: 12
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListByRedisResource
            description: Gets all patch schedules in the specified redis cache (there is only one).
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_215
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_216
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_217
            schema: *ref_213
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: default
                description: Default string modeled as parameter for auto generation to work correctly.
                serializedName: default
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_214
                schema: *ref_95
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters to set the patching schedule for Redis cache.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_214
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/patchSchedules/{default}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_215
          - *ref_216
          - *ref_217
        responses:
          - !SchemaResponse 
            schema: *ref_95
            language: !Languages 
              default:
                name: ''
                description: The patch schedule was successfully updated.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !SchemaResponse 
            schema: *ref_95
            language: !Languages 
              default:
                name: ''
                description: The patch schedule was successfully created.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCachePatchSchedulesCreateOrUpdate:
              parameters:
                name: cache1
                default: default
                api-version: '2020-12-01'
                parameters:
                  properties:
                    scheduleEntries:
                      - dayOfWeek: Monday
                        maintenanceWindow: PT5H
                        startHourUtc: 12
                      - dayOfWeek: Tuesday
                        startHourUtc: 12
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: default
                    type: Microsoft.Cache/Redis/patchSchedules
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default
                    properties:
                      scheduleEntries:
                        - dayOfWeek: Monday
                          maintenanceWindow: PT5H
                          startHourUtc: 12
                        - dayOfWeek: Tuesday
                          startHourUtc: 12
                '201':
                  body:
                    name: default
                    type: Microsoft.Cache/Redis/patchSchedules
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default
                    properties:
                      scheduleEntries:
                        - dayOfWeek: Monday
                          maintenanceWindow: PT5H
                          startHourUtc: 12
                        - dayOfWeek: Tuesday
                          startHourUtc: 12
        language: !Languages 
          default:
            name: CreateOrUpdate
            description: Create or replace the patching schedule for Redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_218
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_219
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_220
            schema: *ref_213
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: default
                description: Default string modeled as parameter for auto generation to work correctly.
                serializedName: default
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/patchSchedules/{default}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_218
          - *ref_219
          - *ref_220
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Success.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Success.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCachePatchSchedulesDelete:
              parameters:
                name: cache1
                default: default
                api-version: '2020-12-01'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200': {}
                '204': {}
        language: !Languages 
          default:
            name: Delete
            description: Deletes the patching schedule of a redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_221
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_222
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_223
            schema: *ref_213
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: default
                description: Default string modeled as parameter for auto generation to work correctly.
                serializedName: default
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/patchSchedules/{default}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_221
          - *ref_222
          - *ref_223
        responses:
          - !SchemaResponse 
            schema: *ref_95
            language: !Languages 
              default:
                name: ''
                description: Response of get patch schedules.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCachePatchSchedulesGet:
              parameters:
                name: cache1
                default: default
                api-version: '2020-12-01'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: default
                    type: Microsoft.Cache/Redis/patchSchedules
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default
                    properties:
                      scheduleEntries:
                        - dayOfWeek: Monday
                          maintenanceWindow: PT5H
                          startHourUtc: 12
                        - dayOfWeek: Tuesday
                          startHourUtc: 12
        language: !Languages 
          default:
            name: Get
            description: Gets the patching schedule of a redis cache.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: PatchSchedules
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: LinkedServer
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_226
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_227
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the Redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_228
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: linkedServerName
                description: The name of the linked server that is being added to the Redis cache.
                serializedName: linkedServerName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_225
                schema: *ref_224
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters supplied to the Create Linked server operation.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_225
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers/{linkedServerName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_226
          - *ref_227
          - *ref_228
        responses:
          - !SchemaResponse 
            schema: *ref_96
            language: !Languages 
              default:
                name: ''
                description: The linked server was successfully added.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !SchemaResponse 
            schema: *ref_96
            language: !Languages 
              default:
                name: ''
                description: The linked server was successfully added.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            LinkedServer_Create:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                linkedServerName: cache2
                parameters:
                  properties:
                    linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                    linkedRedisCacheLocation: West US
                    serverRole: Secondary
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: cache2
                    type: Microsoft.Cache/Redis/linkedServers
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                    properties:
                      linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                      linkedRedisCacheLocation: West US
                      provisioningState: Creating
                      serverRole: Secondary
                '201':
                  body:
                    name: cache2
                    type: Microsoft.Cache/Redis/linkedServers
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                    properties:
                      linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                      linkedRedisCacheLocation: West US
                      provisioningState: Creating
                      serverRole: Secondary
          x-ms-long-running-operation: true
        language: !Languages 
          default:
            name: Create
            description: Adds a linked server to the Redis cache (requires Premium SKU).
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_229
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_230
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_231
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: linkedServerName
                description: The name of the linked server that is being added to the Redis cache.
                serializedName: linkedServerName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers/{linkedServerName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_229
          - *ref_230
          - *ref_231
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: The redis cache was successfully deleted.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Linked server was successfully deleted.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            LinkedServerDelete:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                linkedServerName: cache2
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200': {}
                '204': {}
        language: !Languages 
          default:
            name: Delete
            description: Deletes the linked server from a redis cache (requires Premium SKU).
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_232
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_233
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_234
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: linkedServerName
                description: The name of the linked server.
                serializedName: linkedServerName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers/{linkedServerName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_232
          - *ref_233
          - *ref_234
        responses:
          - !SchemaResponse 
            schema: *ref_96
            language: !Languages 
              default:
                name: ''
                description: Response of get linked server.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            LinkedServer_Get:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                linkedServerName: cache2
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    name: cache2
                    type: Microsoft.Cache/Redis/linkedServers
                    id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                    properties:
                      linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                      linkedRedisCacheLocation: West US
                      provisioningState: Succeeded
                      serverRole: Secondary
        language: !Languages 
          default:
            name: Get
            description: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_235
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_236
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: name
                description: The name of the redis cache.
                serializedName: name
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_235
          - *ref_236
        responses:
          - !SchemaResponse 
            schema: *ref_237
            language: !Languages 
              default:
                name: ''
                description: Response of get linked servers.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            LinkedServer_List:
              parameters:
                name: cache1
                api-version: '2020-12-01'
                resourceGroupName: rg1
                subscriptionId: subid
              responses:
                '200':
                  body:
                    - name: cache2
                      type: Microsoft.Cache/Redis/linkedServers
                      id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                      properties:
                        linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                        linkedRedisCacheLocation: West US
                        provisioningState: Succeeded
                        serverRole: Secondary
                    - name: cache3
                      type: Microsoft.Cache/Redis/linkedServers
                      id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache3
                      properties:
                        linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache3
                        linkedRedisCacheLocation: West US
                        provisioningState: Succeeded
                        serverRole: Secondary
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: Gets the list of linked servers associated with this redis cache (requires Premium SKU).
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: LinkedServer
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: PrivateEndpointConnections
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_238
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_239
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_238
          - *ref_239
        responses:
          - !SchemaResponse 
            schema: *ref_240
            language: !Languages 
              default:
                name: ''
                description: OK -- Successfully retrieved private endpoint connections.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheListPrivateEndpointConnection:
              parameters:
                api-version: '2020-12-01'
                cacheName: cachetest01
                privateEndpointConnectionName: pectest01
                resourceGroupName: rgtest01
                subscriptionId: '{subscriptionId}'
              responses:
                '200':
                  body:
                    value:
                      - name: pectest01
                        type: Microsoft.Cache/Redis/privateEndpointConnections
                        id: /subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Cache/Redis/cachetest01/privateEndpointConnections/pectest01
                        properties:
                          privateEndpoint:
                            id: /subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Network/privateEndpoints/petest01
                          privateLinkServiceConnectionState:
                            description: Auto-Approved
                            actionsRequired: None
                            status: Approved
                          provisioningState: Succeeded
                      - name: pectest01
                        type: Microsoft.Cache/Redis/privateEndpointConnections
                        id: /subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Cache/Redis/cachetest01/privateEndpointConnections/pectest01
                        properties:
                          privateEndpoint:
                            id: /subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Network/privateEndpoints/petest01
                          privateLinkServiceConnectionState:
                            description: Auto-Approved
                            actionsRequired: None
                            status: Approved
                          provisioningState: Succeeded
          x-ms-pageable:
            nextLinkName: null
        language: !Languages 
          default:
            name: List
            description: List all the private endpoint connections associated with the redis cache.
            paging:
              nextLinkName: null
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_242
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_243
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_244
            schema: *ref_241
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: privateEndpointConnectionName
                description: The name of the private endpoint connection associated with the Azure resource
                serializedName: privateEndpointConnectionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections/{privateEndpointConnectionName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_242
          - *ref_243
          - *ref_244
        responses:
          - !SchemaResponse 
            schema: *ref_71
            language: !Languages 
              default:
                name: ''
                description: OK -- Get the private endpoint connection properties successfully.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheGetPrivateEndpointConnection:
              parameters:
                api-version: '2020-12-01'
                cacheName: cachetest01
                privateEndpointConnectionName: pectest01
                resourceGroupName: rgtest01
                subscriptionId: '{subscriptionId}'
              responses:
                '200':
                  body:
                    name: pectest01
                    type: Microsoft.Cache/Redis/privateEndpointConnections
                    id: /subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Cache/Redis/cachetest01/privateEndpointConnections/pectest01
                    properties:
                      privateEndpoint:
                        id: /subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Network/privateEndpoints/petest01
                      privateLinkServiceConnectionState:
                        description: Auto-Approved
                        actionsRequired: None
                        status: Approved
                      provisioningState: Succeeded
        language: !Languages 
          default:
            name: Get
            description: Gets the specified private endpoint connection associated with the redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_246
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_247
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
          - !Parameter &ref_248
            schema: *ref_241
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: privateEndpointConnectionName
                description: The name of the private endpoint connection associated with the Azure resource
                serializedName: privateEndpointConnectionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_156
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_245
                schema: *ref_71
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: properties
                    description: The private endpoint connection properties.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_245
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections/{privateEndpointConnectionName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_246
          - *ref_247
          - *ref_248
        responses:
          - !SchemaResponse 
            schema: *ref_71
            language: !Languages 
              default:
                name: ''
                description: OK -- Update the private endpoint connection properties successfully.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCachePutPrivateEndpointConnection:
              parameters:
                api-version: '2020-12-01'
                cacheName: cachetest01
                privateEndpointConnectionName: pectest01
                properties:
                  properties:
                    privateLinkServiceConnectionState:
                      description: Auto-Approved
                      status: Approved
                resourceGroupName: rgtest01
                subscriptionId: '{subscriptionId}'
              responses:
                '201':
                  body:
                    name: pectest01
                    type: Microsoft.Cache/Redis/privateEndpointConnections
                    id: /subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Cache/Redis/cachetest01/privateEndpointConnections/pectest01
                    properties:
                      privateEndpoint:
                        id: /subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Network/privateEndpoints/petest01
                      privateLinkServiceConnectionState:
                        description: Auto-Approved
                        actionsRequired: None
                        status: Approved
                      provisioningState: Succeeded
          x-ms-long-running-operation: true
        language: !Languages 
          default:
            name: Put
            description: Update the state of specified private endpoint connection associated with the redis cache.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_249
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_250
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
          - !Parameter &ref_251
            schema: *ref_241
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: privateEndpointConnectionName
                description: The name of the private endpoint connection associated with the Azure resource
                serializedName: privateEndpointConnectionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections/{privateEndpointConnectionName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_249
          - *ref_250
          - *ref_251
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK -- Delete the private endpoint connection successfully.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No Content -- The private endpoint connection does not exist.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            RedisCacheDeletePrivateEndpointConnection:
              parameters:
                api-version: '2020-12-01'
                cacheName: cachetest01
                privateEndpointConnectionName: pectest01
                resourceGroupName: rgtest01
                subscriptionId: '{subscriptionId}'
              responses:
                '200': {}
                '204': {}
        language: !Languages 
          default:
            name: Delete
            description: Deletes the specified private endpoint connection associated with the redis cache.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: PrivateEndpointConnections
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: PrivateLinkResources
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-12-01'
        parameters:
          - *ref_150
          - !Parameter &ref_252
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_253
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: cacheName
                description: The name of the Redis cache.
                serializedName: cacheName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_151
          - *ref_155
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_152
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateLinkResources
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_252
          - *ref_253
        responses:
          - !SchemaResponse 
            schema: *ref_254
            language: !Languages 
              default:
                name: ''
                description: Successfully retrieved private link resources.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_154
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            StorageAccountListPrivateLinkResources:
              parameters:
                api-version: '2020-12-01'
                cacheName: cacheTest01
                resourceGroupName: rgtest01
                subscriptionId: '{subscription-id}'
              responses:
                '200':
                  body:
                    value:
                      - name: redisCache
                        type: Microsoft.Cache/Redis/privateLinkResources
                        id: /subscriptions/{subscription-id}/resourceGroups/rgtest01/providers/Microsoft.Cache/Redis/cacheTest01/privateLinkResources/redisCache
                        properties:
                          groupId: redisCache
                          requiredMembers:
                            - redisCache
                          requiredZoneNames:
                            - privatelink.redis.cache.windows.net
          x-ms-pageable:
            nextLinkName: null
        language: !Languages 
          default:
            name: ListByRedisCache
            description: Gets the private link resources that need to be created for a redis cache.
            paging:
              nextLinkName: null
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: PrivateLinkResources
        description: ''
    protocol: !Protocols {}
security: !Security 
  authenticationRequired: true
  schemes:
    - !AADTokenSecurityScheme 
      type: AADToken
      scopes:
        - https://management.azure.com/.default
language: !Languages 
  default:
    name: RedisManagementClient
    description: ''
protocol: !Protocols 
  http: !HttpModel {}
