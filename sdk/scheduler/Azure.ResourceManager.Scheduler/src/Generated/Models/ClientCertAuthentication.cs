// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Scheduler.Models
{
    /// <summary> The ClientCertAuthentication. </summary>
    public partial class ClientCertAuthentication : HttpAuthentication
    {
        /// <summary> Initializes a new instance of ClientCertAuthentication. </summary>
        public ClientCertAuthentication()
        {
            Type = HttpAuthenticationType.ClientCertificate;
        }

        /// <summary> Initializes a new instance of ClientCertAuthentication. </summary>
        /// <param name="type"> Gets or sets the HTTP authentication type. </param>
        /// <param name="password"> Gets or sets the certificate password, return value will always be empty. </param>
        /// <param name="pfx"> Gets or sets the pfx certificate. Accepts certification in base64 encoding, return value will always be empty. </param>
        /// <param name="certificateThumbprint"> Gets or sets the certificate thumbprint. </param>
        /// <param name="certificateExpirationDate"> Gets or sets the certificate expiration date. </param>
        /// <param name="certificateSubjectName"> Gets or sets the certificate subject name. </param>
        internal ClientCertAuthentication(HttpAuthenticationType type, string password, string pfx, string certificateThumbprint, DateTimeOffset? certificateExpirationDate, string certificateSubjectName) : base(type)
        {
            Password = password;
            Pfx = pfx;
            CertificateThumbprint = certificateThumbprint;
            CertificateExpirationDate = certificateExpirationDate;
            CertificateSubjectName = certificateSubjectName;
            Type = type;
        }

        /// <summary> Gets or sets the certificate password, return value will always be empty. </summary>
        public string Password { get; set; }
        /// <summary> Gets or sets the pfx certificate. Accepts certification in base64 encoding, return value will always be empty. </summary>
        public string Pfx { get; set; }
        /// <summary> Gets or sets the certificate thumbprint. </summary>
        public string CertificateThumbprint { get; set; }
        /// <summary> Gets or sets the certificate expiration date. </summary>
        public DateTimeOffset? CertificateExpirationDate { get; set; }
        /// <summary> Gets or sets the certificate subject name. </summary>
        public string CertificateSubjectName { get; set; }
    }
}
