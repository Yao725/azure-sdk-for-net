// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Scheduler.Models
{
    public partial class JobCollectionQuota : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MaxJobCount))
            {
                writer.WritePropertyName("maxJobCount");
                writer.WriteNumberValue(MaxJobCount.Value);
            }
            if (Optional.IsDefined(MaxJobOccurrence))
            {
                writer.WritePropertyName("maxJobOccurrence");
                writer.WriteNumberValue(MaxJobOccurrence.Value);
            }
            if (Optional.IsDefined(MaxRecurrence))
            {
                writer.WritePropertyName("maxRecurrence");
                writer.WriteObjectValue(MaxRecurrence);
            }
            writer.WriteEndObject();
        }

        internal static JobCollectionQuota DeserializeJobCollectionQuota(JsonElement element)
        {
            Optional<int> maxJobCount = default;
            Optional<int> maxJobOccurrence = default;
            Optional<JobMaxRecurrence> maxRecurrence = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("maxJobCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxJobCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maxJobOccurrence"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxJobOccurrence = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maxRecurrence"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxRecurrence = JobMaxRecurrence.DeserializeJobMaxRecurrence(property.Value);
                    continue;
                }
            }
            return new JobCollectionQuota(Optional.ToNullable(maxJobCount), Optional.ToNullable(maxJobOccurrence), maxRecurrence.Value);
        }
    }
}
