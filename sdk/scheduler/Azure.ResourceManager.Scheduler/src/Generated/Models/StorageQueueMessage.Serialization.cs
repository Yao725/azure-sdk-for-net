// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Scheduler.Models
{
    public partial class StorageQueueMessage : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(StorageAccount))
            {
                writer.WritePropertyName("storageAccount");
                writer.WriteStringValue(StorageAccount);
            }
            if (Optional.IsDefined(QueueName))
            {
                writer.WritePropertyName("queueName");
                writer.WriteStringValue(QueueName);
            }
            if (Optional.IsDefined(SasToken))
            {
                writer.WritePropertyName("sasToken");
                writer.WriteStringValue(SasToken);
            }
            if (Optional.IsDefined(Message))
            {
                writer.WritePropertyName("message");
                writer.WriteStringValue(Message);
            }
            writer.WriteEndObject();
        }

        internal static StorageQueueMessage DeserializeStorageQueueMessage(JsonElement element)
        {
            Optional<string> storageAccount = default;
            Optional<string> queueName = default;
            Optional<string> sasToken = default;
            Optional<string> message = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("storageAccount"))
                {
                    storageAccount = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("queueName"))
                {
                    queueName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sasToken"))
                {
                    sasToken = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("message"))
                {
                    message = property.Value.GetString();
                    continue;
                }
            }
            return new StorageQueueMessage(storageAccount.Value, queueName.Value, sasToken.Value, message.Value);
        }
    }
}
