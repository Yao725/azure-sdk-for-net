// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Scheduler.Models
{
    /// <summary> The JobStatus. </summary>
    public partial class JobStatus
    {
        /// <summary> Initializes a new instance of JobStatus. </summary>
        internal JobStatus()
        {
        }

        /// <summary> Initializes a new instance of JobStatus. </summary>
        /// <param name="executionCount"> Gets the number of times this job has executed. </param>
        /// <param name="failureCount"> Gets the number of times this job has failed. </param>
        /// <param name="faultedCount"> Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states). </param>
        /// <param name="lastExecutionTime"> Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet. </param>
        /// <param name="nextExecutionTime"> Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed. </param>
        internal JobStatus(int? executionCount, int? failureCount, int? faultedCount, DateTimeOffset? lastExecutionTime, DateTimeOffset? nextExecutionTime)
        {
            ExecutionCount = executionCount;
            FailureCount = failureCount;
            FaultedCount = faultedCount;
            LastExecutionTime = lastExecutionTime;
            NextExecutionTime = nextExecutionTime;
        }

        /// <summary> Gets the number of times this job has executed. </summary>
        public int? ExecutionCount { get; }
        /// <summary> Gets the number of times this job has failed. </summary>
        public int? FailureCount { get; }
        /// <summary> Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states). </summary>
        public int? FaultedCount { get; }
        /// <summary> Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet. </summary>
        public DateTimeOffset? LastExecutionTime { get; }
        /// <summary> Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed. </summary>
        public DateTimeOffset? NextExecutionTime { get; }
    }
}
